import{eq as p}from"drizzle-orm";import{c,d as s}from"./index-8Htcofqc.js";import{c as m}from"./companies-l5PKOmvG.js";import{c as t}from"./company-categories-CgBd9Wjc.js";import{a as d}from"./company.schema-C_XODBeq.js";import*as y from"valibot";import{decode as f}from"decode-formdata";import{createServerFn as _}from"@tanstack/start-client-core";import"tiny-invariant";import"drizzle-orm/postgres-js";import"postgres";import"dotenv";import"drizzle-orm/pg-core";import"./auth-BsEI6_U5.js";import"nanoid";import"./categories-B1A9pQfz.js";const l=c("app_lib_api_companies_mutations_update-company-infos_ts--updateCompanyInfos_createServerFn_handler","/_server",(e,a)=>u.__executeServer(e,a)),u=_({method:"POST"}).validator(e=>{const a=f(e,{arrays:["categories"],booleans:["rqth"]});return y.parse(d,a)}).handler(l,async({data:e})=>{const{categories:a,companyId:o,...n}=e;try{await s.transaction(async r=>{await r.update(m).set(n).where(p(m.id,o)),a.length>0&&(await r.delete(t).where(p(t.company_id,o)),await r.insert(t).values(a.map(i=>({company_id:o,category_id:i}))))})}catch(r){throw console.error("Failed to update company info:",r),new Error("Failed to update company information")}});export{l as updateCompanyInfos_createServerFn_handler};
