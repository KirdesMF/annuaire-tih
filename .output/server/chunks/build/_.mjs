import{bo as e,Q as a,a8 as t,a9 as r,aa as s,ac as o,ad as n}from"../nitro/nitro.mjs";import{b as d,a as i,r as l,d as p,R as u}from"../_/index.mjs";import{c,P as m,d as _}from"../_/main.mjs";import"node:net";import"node:stream";import"node:events";import"node:process";import"node:buffer";import"node:timers";import"node:async_hooks";import"node:url";import"node:stream/web";import"node:crypto";import"../_/server.mjs";import"node:path";c({path:".env"});const A=_({client:m(a.env.DATABASE_URL,{prepare:!1})}),f=t("user",{id:s("id").primaryKey(),name:n("first_name",{length:255}).notNull(),email:n("email",{length:255}).notNull().unique(),emailVerified:o("email_verified").notNull(),image:n("image",{length:255}),createdAt:r("created_at").notNull(),updatedAt:r("updated_at").notNull(),role:n("role",{length:255}).$type().default("user").notNull(),banned:o("banned"),banReason:s("ban_reason"),banExpires:r("ban_expires")}),N=t("session",{id:s("id").primaryKey(),expiresAt:r("expires_at").notNull(),token:s("token").notNull().unique(),createdAt:r("created_at").notNull(),updatedAt:r("updated_at").notNull(),ipAddress:s("ip_address"),userAgent:s("user_agent"),userId:s("user_id").notNull().references((()=>f.id),{onDelete:"cascade"}),impersonatedBy:s("impersonated_by")}),b=t("account",{id:s("id").primaryKey(),accountId:s("account_id").notNull(),providerId:s("provider_id").notNull(),userId:s("user_id").notNull().references((()=>f.id),{onDelete:"cascade"}),accessToken:s("access_token"),refreshToken:s("refresh_token"),idToken:s("id_token"),accessTokenExpiresAt:r("access_token_expires_at"),refreshTokenExpiresAt:r("refresh_token_expires_at"),scope:s("scope"),password:s("password"),createdAt:r("created_at").notNull(),updatedAt:r("updated_at").notNull()}),h=t("verification",{id:s("id").primaryKey(),identifier:s("identifier").notNull(),value:s("value").notNull(),expiresAt:r("expires_at").notNull(),createdAt:r("created_at"),updatedAt:r("updated_at")}),k=d({database:p(A,{provider:"pg",schema:{user:f,session:N,account:b,verification:h}}),session:{cookieCache:{enabled:!0,maxAge:300}},plugins:[i({adminRoles:["admin","superadmin"]}),l()],emailAndPassword:{enabled:!0,sendResetPassword:async({user:e,url:t,token:r})=>{const s=new u(a.env.RESEND_API_KEY),{data:o,error:n}=await s.emails.send({from:"Acme <onboarding@resend.dev>",to:e.email,subject:"Reset your password",text:`Click ${t} to reset your password`});n&&console.error(n),console.log(o)}},user:{deleteUser:{enabled:!0},changeEmail:{enabled:!0}}}),y=e("/api/auth/$")({GET:({request:e})=>k.handler(e),POST:({request:e})=>k.handler(e)});export{y as APIRoute};
//# sourceMappingURL=_.mjs.map
