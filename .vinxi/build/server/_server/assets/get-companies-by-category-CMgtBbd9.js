import{eq as o,and as s}from"drizzle-orm";import{c,d as n}from"./index-8Htcofqc.js";import{c as i,C as y}from"./companies-l5PKOmvG.js";import*as r from"valibot";import{c as m}from"./company-categories-CgBd9Wjc.js";import{createServerFn as _}from"@tanstack/start-client-core";import"tiny-invariant";import"drizzle-orm/postgres-js";import"postgres";import"dotenv";import"drizzle-orm/pg-core";import"./auth-BsEI6_U5.js";import"nanoid";import"./categories-B1A9pQfz.js";const g=r.object({categoryId:r.string(),status:r.picklist(y)}),d=c("app_lib_api_companies_queries_get-companies-by-category_ts--getCompaniesByCategory_createServerFn_handler","/_server",(e,t)=>C.__executeServer(e,t)),C=_({method:"GET"}).validator(e=>r.parse(g,e)).handler(d,async({data:{categoryId:e,status:t="active"}})=>{const p=await n.select().from(i).innerJoin(m,o(i.id,m.company_id)).where(s(o(m.category_id,e),o(i.status,t)));return{companies:p.map(a=>a.companies),categories:p.map(a=>a.company_categories)}});export{d as getCompaniesByCategory_createServerFn_handler};
