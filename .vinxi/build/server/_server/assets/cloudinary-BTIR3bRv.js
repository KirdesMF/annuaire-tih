import{v2 as o}from"cloudinary";o.config({cloud_name:process.env.CLOUDINARY_CLOUD_NAME,api_key:process.env.CLOUDINARY_API_KEY,api_secret:process.env.CLOUDINARY_API_SECRET});async function f({type:r,file:e,companyId:a,companySlug:n}){const l=r==="logo"?`companies/${n}/logo`:`companies/${n}/gallery`;try{const i=await e.arrayBuffer();return await new Promise((t,s)=>{o.uploader.upload_stream({folder:l,resource_type:"auto",public_id:`${a}-${Date.now()}`,allowed_formats:["jpg","png","jpeg","webp"]},(d,u)=>{d&&s(d),u&&t({secure_url:u.secure_url,public_id:u.public_id})}).end(Buffer.from(i))})}catch(i){throw console.error(i),new Error("Failed to upload image to Cloudinary")}}async function _({file:r,publicId:e}){try{const a=await r.arrayBuffer();return await new Promise((l,i)=>{o.uploader.upload_stream({public_id:e,overwrite:!0,invalidate:!0,allowed_formats:["jpg","png","jpeg","webp"]},(c,t)=>{c&&i(c),t&&l({secure_url:t.secure_url,public_id:t.public_id})}).end(Buffer.from(a))})}catch(a){throw console.error(a),new Error("Failed to upload image to Cloudinary")}}async function m(r){try{await o.uploader.destroy(r)}catch(e){throw console.error(e),new Error("Failed to delete image from Cloudinary")}}async function w(r){try{const e=`companies/${r}`;await o.api.delete_resources_by_prefix(e),await o.api.delete_folder(e)}catch(e){throw console.error(e),new Error("Failed to delete images from Cloudinary")}}export{m as a,_ as b,w as d,f as u};
