/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SourcesImport } from './routes/sources'
import { Route as PartnerImport } from './routes/partner'
import { Route as FaqImport } from './routes/faq'
import { Route as ContactImport } from './routes/contact'
import { Route as AboutImport } from './routes/about'
import { Route as ProtectedRouteImport } from './routes/_protected/route'
import { Route as AdminRouteImport } from './routes/_admin/route'
import { Route as IndexImport } from './routes/index'
import { Route as EntrepreneursIndexImport } from './routes/entrepreneurs/index'
import { Route as CategoriesIndexImport } from './routes/categories/index'
import { Route as EntreprisesEntrepriseIdImport } from './routes/entreprises/$entrepriseId'
import { Route as CategoriesCategoryIdImport } from './routes/categories/$categoryId'
import { Route as ProtectedReferenceImport } from './routes/_protected/reference'
import { Route as AuthSignupImport } from './routes/_auth/signup'
import { Route as AuthResetPasswordImport } from './routes/_auth/reset-password'
import { Route as AuthLoginImport } from './routes/_auth/login'
import { Route as AuthForgotPasswordImport } from './routes/_auth/forgot-password'
import { Route as ProtectedCompteRouteImport } from './routes/_protected/_compte/route'
import { Route as AdminAdminDashboardImport } from './routes/_admin/admin/dashboard'
import { Route as ProtectedCompteComptePreferencesImport } from './routes/_protected/_compte/compte/preferences'
import { Route as ProtectedCompteCompteEntreprisesIndexImport } from './routes/_protected/_compte/compte/entreprises/index'
import { Route as ProtectedCompteCompteEntreprisesAddImport } from './routes/_protected/_compte/compte/entreprises/add'
import { Route as ProtectedCompteCompteEntreprisesEntrepriseIdEditImport } from './routes/_protected/_compte/compte/entreprises/$entrepriseId/edit'

// Create/Update Routes

const SourcesRoute = SourcesImport.update({
  id: '/sources',
  path: '/sources',
  getParentRoute: () => rootRoute,
} as any)

const PartnerRoute = PartnerImport.update({
  id: '/partner',
  path: '/partner',
  getParentRoute: () => rootRoute,
} as any)

const FaqRoute = FaqImport.update({
  id: '/faq',
  path: '/faq',
  getParentRoute: () => rootRoute,
} as any)

const ContactRoute = ContactImport.update({
  id: '/contact',
  path: '/contact',
  getParentRoute: () => rootRoute,
} as any)

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const ProtectedRouteRoute = ProtectedRouteImport.update({
  id: '/_protected',
  getParentRoute: () => rootRoute,
} as any)

const AdminRouteRoute = AdminRouteImport.update({
  id: '/_admin',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const EntrepreneursIndexRoute = EntrepreneursIndexImport.update({
  id: '/entrepreneurs/',
  path: '/entrepreneurs/',
  getParentRoute: () => rootRoute,
} as any)

const CategoriesIndexRoute = CategoriesIndexImport.update({
  id: '/categories/',
  path: '/categories/',
  getParentRoute: () => rootRoute,
} as any)

const EntreprisesEntrepriseIdRoute = EntreprisesEntrepriseIdImport.update({
  id: '/entreprises/$entrepriseId',
  path: '/entreprises/$entrepriseId',
  getParentRoute: () => rootRoute,
} as any)

const CategoriesCategoryIdRoute = CategoriesCategoryIdImport.update({
  id: '/categories/$categoryId',
  path: '/categories/$categoryId',
  getParentRoute: () => rootRoute,
} as any)

const ProtectedReferenceRoute = ProtectedReferenceImport.update({
  id: '/reference',
  path: '/reference',
  getParentRoute: () => ProtectedRouteRoute,
} as any)

const AuthSignupRoute = AuthSignupImport.update({
  id: '/_auth/signup',
  path: '/signup',
  getParentRoute: () => rootRoute,
} as any)

const AuthResetPasswordRoute = AuthResetPasswordImport.update({
  id: '/_auth/reset-password',
  path: '/reset-password',
  getParentRoute: () => rootRoute,
} as any)

const AuthLoginRoute = AuthLoginImport.update({
  id: '/_auth/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const AuthForgotPasswordRoute = AuthForgotPasswordImport.update({
  id: '/_auth/forgot-password',
  path: '/forgot-password',
  getParentRoute: () => rootRoute,
} as any)

const ProtectedCompteRouteRoute = ProtectedCompteRouteImport.update({
  id: '/_compte',
  getParentRoute: () => ProtectedRouteRoute,
} as any)

const AdminAdminDashboardRoute = AdminAdminDashboardImport.update({
  id: '/admin/dashboard',
  path: '/admin/dashboard',
  getParentRoute: () => AdminRouteRoute,
} as any)

const ProtectedCompteComptePreferencesRoute =
  ProtectedCompteComptePreferencesImport.update({
    id: '/compte/preferences',
    path: '/compte/preferences',
    getParentRoute: () => ProtectedCompteRouteRoute,
  } as any)

const ProtectedCompteCompteEntreprisesIndexRoute =
  ProtectedCompteCompteEntreprisesIndexImport.update({
    id: '/compte/entreprises/',
    path: '/compte/entreprises/',
    getParentRoute: () => ProtectedCompteRouteRoute,
  } as any)

const ProtectedCompteCompteEntreprisesAddRoute =
  ProtectedCompteCompteEntreprisesAddImport.update({
    id: '/compte/entreprises/add',
    path: '/compte/entreprises/add',
    getParentRoute: () => ProtectedCompteRouteRoute,
  } as any)

const ProtectedCompteCompteEntreprisesEntrepriseIdEditRoute =
  ProtectedCompteCompteEntreprisesEntrepriseIdEditImport.update({
    id: '/compte/entreprises/$entrepriseId/edit',
    path: '/compte/entreprises/$entrepriseId/edit',
    getParentRoute: () => ProtectedCompteRouteRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_admin': {
      id: '/_admin'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AdminRouteImport
      parentRoute: typeof rootRoute
    }
    '/_protected': {
      id: '/_protected'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof ProtectedRouteImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/contact': {
      id: '/contact'
      path: '/contact'
      fullPath: '/contact'
      preLoaderRoute: typeof ContactImport
      parentRoute: typeof rootRoute
    }
    '/faq': {
      id: '/faq'
      path: '/faq'
      fullPath: '/faq'
      preLoaderRoute: typeof FaqImport
      parentRoute: typeof rootRoute
    }
    '/partner': {
      id: '/partner'
      path: '/partner'
      fullPath: '/partner'
      preLoaderRoute: typeof PartnerImport
      parentRoute: typeof rootRoute
    }
    '/sources': {
      id: '/sources'
      path: '/sources'
      fullPath: '/sources'
      preLoaderRoute: typeof SourcesImport
      parentRoute: typeof rootRoute
    }
    '/_protected/_compte': {
      id: '/_protected/_compte'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof ProtectedCompteRouteImport
      parentRoute: typeof ProtectedRouteImport
    }
    '/_auth/forgot-password': {
      id: '/_auth/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof AuthForgotPasswordImport
      parentRoute: typeof rootRoute
    }
    '/_auth/login': {
      id: '/_auth/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof AuthLoginImport
      parentRoute: typeof rootRoute
    }
    '/_auth/reset-password': {
      id: '/_auth/reset-password'
      path: '/reset-password'
      fullPath: '/reset-password'
      preLoaderRoute: typeof AuthResetPasswordImport
      parentRoute: typeof rootRoute
    }
    '/_auth/signup': {
      id: '/_auth/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof AuthSignupImport
      parentRoute: typeof rootRoute
    }
    '/_protected/reference': {
      id: '/_protected/reference'
      path: '/reference'
      fullPath: '/reference'
      preLoaderRoute: typeof ProtectedReferenceImport
      parentRoute: typeof ProtectedRouteImport
    }
    '/categories/$categoryId': {
      id: '/categories/$categoryId'
      path: '/categories/$categoryId'
      fullPath: '/categories/$categoryId'
      preLoaderRoute: typeof CategoriesCategoryIdImport
      parentRoute: typeof rootRoute
    }
    '/entreprises/$entrepriseId': {
      id: '/entreprises/$entrepriseId'
      path: '/entreprises/$entrepriseId'
      fullPath: '/entreprises/$entrepriseId'
      preLoaderRoute: typeof EntreprisesEntrepriseIdImport
      parentRoute: typeof rootRoute
    }
    '/categories/': {
      id: '/categories/'
      path: '/categories'
      fullPath: '/categories'
      preLoaderRoute: typeof CategoriesIndexImport
      parentRoute: typeof rootRoute
    }
    '/entrepreneurs/': {
      id: '/entrepreneurs/'
      path: '/entrepreneurs'
      fullPath: '/entrepreneurs'
      preLoaderRoute: typeof EntrepreneursIndexImport
      parentRoute: typeof rootRoute
    }
    '/_admin/admin/dashboard': {
      id: '/_admin/admin/dashboard'
      path: '/admin/dashboard'
      fullPath: '/admin/dashboard'
      preLoaderRoute: typeof AdminAdminDashboardImport
      parentRoute: typeof AdminRouteImport
    }
    '/_protected/_compte/compte/preferences': {
      id: '/_protected/_compte/compte/preferences'
      path: '/compte/preferences'
      fullPath: '/compte/preferences'
      preLoaderRoute: typeof ProtectedCompteComptePreferencesImport
      parentRoute: typeof ProtectedCompteRouteImport
    }
    '/_protected/_compte/compte/entreprises/add': {
      id: '/_protected/_compte/compte/entreprises/add'
      path: '/compte/entreprises/add'
      fullPath: '/compte/entreprises/add'
      preLoaderRoute: typeof ProtectedCompteCompteEntreprisesAddImport
      parentRoute: typeof ProtectedCompteRouteImport
    }
    '/_protected/_compte/compte/entreprises/': {
      id: '/_protected/_compte/compte/entreprises/'
      path: '/compte/entreprises'
      fullPath: '/compte/entreprises'
      preLoaderRoute: typeof ProtectedCompteCompteEntreprisesIndexImport
      parentRoute: typeof ProtectedCompteRouteImport
    }
    '/_protected/_compte/compte/entreprises/$entrepriseId/edit': {
      id: '/_protected/_compte/compte/entreprises/$entrepriseId/edit'
      path: '/compte/entreprises/$entrepriseId/edit'
      fullPath: '/compte/entreprises/$entrepriseId/edit'
      preLoaderRoute: typeof ProtectedCompteCompteEntreprisesEntrepriseIdEditImport
      parentRoute: typeof ProtectedCompteRouteImport
    }
  }
}

// Create and export the route tree

interface AdminRouteRouteChildren {
  AdminAdminDashboardRoute: typeof AdminAdminDashboardRoute
}

const AdminRouteRouteChildren: AdminRouteRouteChildren = {
  AdminAdminDashboardRoute: AdminAdminDashboardRoute,
}

const AdminRouteRouteWithChildren = AdminRouteRoute._addFileChildren(
  AdminRouteRouteChildren,
)

interface ProtectedCompteRouteRouteChildren {
  ProtectedCompteComptePreferencesRoute: typeof ProtectedCompteComptePreferencesRoute
  ProtectedCompteCompteEntreprisesAddRoute: typeof ProtectedCompteCompteEntreprisesAddRoute
  ProtectedCompteCompteEntreprisesIndexRoute: typeof ProtectedCompteCompteEntreprisesIndexRoute
  ProtectedCompteCompteEntreprisesEntrepriseIdEditRoute: typeof ProtectedCompteCompteEntreprisesEntrepriseIdEditRoute
}

const ProtectedCompteRouteRouteChildren: ProtectedCompteRouteRouteChildren = {
  ProtectedCompteComptePreferencesRoute: ProtectedCompteComptePreferencesRoute,
  ProtectedCompteCompteEntreprisesAddRoute:
    ProtectedCompteCompteEntreprisesAddRoute,
  ProtectedCompteCompteEntreprisesIndexRoute:
    ProtectedCompteCompteEntreprisesIndexRoute,
  ProtectedCompteCompteEntreprisesEntrepriseIdEditRoute:
    ProtectedCompteCompteEntreprisesEntrepriseIdEditRoute,
}

const ProtectedCompteRouteRouteWithChildren =
  ProtectedCompteRouteRoute._addFileChildren(ProtectedCompteRouteRouteChildren)

interface ProtectedRouteRouteChildren {
  ProtectedCompteRouteRoute: typeof ProtectedCompteRouteRouteWithChildren
  ProtectedReferenceRoute: typeof ProtectedReferenceRoute
}

const ProtectedRouteRouteChildren: ProtectedRouteRouteChildren = {
  ProtectedCompteRouteRoute: ProtectedCompteRouteRouteWithChildren,
  ProtectedReferenceRoute: ProtectedReferenceRoute,
}

const ProtectedRouteRouteWithChildren = ProtectedRouteRoute._addFileChildren(
  ProtectedRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof ProtectedCompteRouteRouteWithChildren
  '/about': typeof AboutRoute
  '/contact': typeof ContactRoute
  '/faq': typeof FaqRoute
  '/partner': typeof PartnerRoute
  '/sources': typeof SourcesRoute
  '/forgot-password': typeof AuthForgotPasswordRoute
  '/login': typeof AuthLoginRoute
  '/reset-password': typeof AuthResetPasswordRoute
  '/signup': typeof AuthSignupRoute
  '/reference': typeof ProtectedReferenceRoute
  '/categories/$categoryId': typeof CategoriesCategoryIdRoute
  '/entreprises/$entrepriseId': typeof EntreprisesEntrepriseIdRoute
  '/categories': typeof CategoriesIndexRoute
  '/entrepreneurs': typeof EntrepreneursIndexRoute
  '/admin/dashboard': typeof AdminAdminDashboardRoute
  '/compte/preferences': typeof ProtectedCompteComptePreferencesRoute
  '/compte/entreprises/add': typeof ProtectedCompteCompteEntreprisesAddRoute
  '/compte/entreprises': typeof ProtectedCompteCompteEntreprisesIndexRoute
  '/compte/entreprises/$entrepriseId/edit': typeof ProtectedCompteCompteEntreprisesEntrepriseIdEditRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof ProtectedCompteRouteRouteWithChildren
  '/about': typeof AboutRoute
  '/contact': typeof ContactRoute
  '/faq': typeof FaqRoute
  '/partner': typeof PartnerRoute
  '/sources': typeof SourcesRoute
  '/forgot-password': typeof AuthForgotPasswordRoute
  '/login': typeof AuthLoginRoute
  '/reset-password': typeof AuthResetPasswordRoute
  '/signup': typeof AuthSignupRoute
  '/reference': typeof ProtectedReferenceRoute
  '/categories/$categoryId': typeof CategoriesCategoryIdRoute
  '/entreprises/$entrepriseId': typeof EntreprisesEntrepriseIdRoute
  '/categories': typeof CategoriesIndexRoute
  '/entrepreneurs': typeof EntrepreneursIndexRoute
  '/admin/dashboard': typeof AdminAdminDashboardRoute
  '/compte/preferences': typeof ProtectedCompteComptePreferencesRoute
  '/compte/entreprises/add': typeof ProtectedCompteCompteEntreprisesAddRoute
  '/compte/entreprises': typeof ProtectedCompteCompteEntreprisesIndexRoute
  '/compte/entreprises/$entrepriseId/edit': typeof ProtectedCompteCompteEntreprisesEntrepriseIdEditRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_admin': typeof AdminRouteRouteWithChildren
  '/_protected': typeof ProtectedRouteRouteWithChildren
  '/about': typeof AboutRoute
  '/contact': typeof ContactRoute
  '/faq': typeof FaqRoute
  '/partner': typeof PartnerRoute
  '/sources': typeof SourcesRoute
  '/_protected/_compte': typeof ProtectedCompteRouteRouteWithChildren
  '/_auth/forgot-password': typeof AuthForgotPasswordRoute
  '/_auth/login': typeof AuthLoginRoute
  '/_auth/reset-password': typeof AuthResetPasswordRoute
  '/_auth/signup': typeof AuthSignupRoute
  '/_protected/reference': typeof ProtectedReferenceRoute
  '/categories/$categoryId': typeof CategoriesCategoryIdRoute
  '/entreprises/$entrepriseId': typeof EntreprisesEntrepriseIdRoute
  '/categories/': typeof CategoriesIndexRoute
  '/entrepreneurs/': typeof EntrepreneursIndexRoute
  '/_admin/admin/dashboard': typeof AdminAdminDashboardRoute
  '/_protected/_compte/compte/preferences': typeof ProtectedCompteComptePreferencesRoute
  '/_protected/_compte/compte/entreprises/add': typeof ProtectedCompteCompteEntreprisesAddRoute
  '/_protected/_compte/compte/entreprises/': typeof ProtectedCompteCompteEntreprisesIndexRoute
  '/_protected/_compte/compte/entreprises/$entrepriseId/edit': typeof ProtectedCompteCompteEntreprisesEntrepriseIdEditRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/about'
    | '/contact'
    | '/faq'
    | '/partner'
    | '/sources'
    | '/forgot-password'
    | '/login'
    | '/reset-password'
    | '/signup'
    | '/reference'
    | '/categories/$categoryId'
    | '/entreprises/$entrepriseId'
    | '/categories'
    | '/entrepreneurs'
    | '/admin/dashboard'
    | '/compte/preferences'
    | '/compte/entreprises/add'
    | '/compte/entreprises'
    | '/compte/entreprises/$entrepriseId/edit'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/about'
    | '/contact'
    | '/faq'
    | '/partner'
    | '/sources'
    | '/forgot-password'
    | '/login'
    | '/reset-password'
    | '/signup'
    | '/reference'
    | '/categories/$categoryId'
    | '/entreprises/$entrepriseId'
    | '/categories'
    | '/entrepreneurs'
    | '/admin/dashboard'
    | '/compte/preferences'
    | '/compte/entreprises/add'
    | '/compte/entreprises'
    | '/compte/entreprises/$entrepriseId/edit'
  id:
    | '__root__'
    | '/'
    | '/_admin'
    | '/_protected'
    | '/about'
    | '/contact'
    | '/faq'
    | '/partner'
    | '/sources'
    | '/_protected/_compte'
    | '/_auth/forgot-password'
    | '/_auth/login'
    | '/_auth/reset-password'
    | '/_auth/signup'
    | '/_protected/reference'
    | '/categories/$categoryId'
    | '/entreprises/$entrepriseId'
    | '/categories/'
    | '/entrepreneurs/'
    | '/_admin/admin/dashboard'
    | '/_protected/_compte/compte/preferences'
    | '/_protected/_compte/compte/entreprises/add'
    | '/_protected/_compte/compte/entreprises/'
    | '/_protected/_compte/compte/entreprises/$entrepriseId/edit'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AdminRouteRoute: typeof AdminRouteRouteWithChildren
  ProtectedRouteRoute: typeof ProtectedRouteRouteWithChildren
  AboutRoute: typeof AboutRoute
  ContactRoute: typeof ContactRoute
  FaqRoute: typeof FaqRoute
  PartnerRoute: typeof PartnerRoute
  SourcesRoute: typeof SourcesRoute
  AuthForgotPasswordRoute: typeof AuthForgotPasswordRoute
  AuthLoginRoute: typeof AuthLoginRoute
  AuthResetPasswordRoute: typeof AuthResetPasswordRoute
  AuthSignupRoute: typeof AuthSignupRoute
  CategoriesCategoryIdRoute: typeof CategoriesCategoryIdRoute
  EntreprisesEntrepriseIdRoute: typeof EntreprisesEntrepriseIdRoute
  CategoriesIndexRoute: typeof CategoriesIndexRoute
  EntrepreneursIndexRoute: typeof EntrepreneursIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AdminRouteRoute: AdminRouteRouteWithChildren,
  ProtectedRouteRoute: ProtectedRouteRouteWithChildren,
  AboutRoute: AboutRoute,
  ContactRoute: ContactRoute,
  FaqRoute: FaqRoute,
  PartnerRoute: PartnerRoute,
  SourcesRoute: SourcesRoute,
  AuthForgotPasswordRoute: AuthForgotPasswordRoute,
  AuthLoginRoute: AuthLoginRoute,
  AuthResetPasswordRoute: AuthResetPasswordRoute,
  AuthSignupRoute: AuthSignupRoute,
  CategoriesCategoryIdRoute: CategoriesCategoryIdRoute,
  EntreprisesEntrepriseIdRoute: EntreprisesEntrepriseIdRoute,
  CategoriesIndexRoute: CategoriesIndexRoute,
  EntrepreneursIndexRoute: EntrepreneursIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_admin",
        "/_protected",
        "/about",
        "/contact",
        "/faq",
        "/partner",
        "/sources",
        "/_auth/forgot-password",
        "/_auth/login",
        "/_auth/reset-password",
        "/_auth/signup",
        "/categories/$categoryId",
        "/entreprises/$entrepriseId",
        "/categories/",
        "/entrepreneurs/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_admin": {
      "filePath": "_admin/route.tsx",
      "children": [
        "/_admin/admin/dashboard"
      ]
    },
    "/_protected": {
      "filePath": "_protected/route.tsx",
      "children": [
        "/_protected/_compte",
        "/_protected/reference"
      ]
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/contact": {
      "filePath": "contact.tsx"
    },
    "/faq": {
      "filePath": "faq.tsx"
    },
    "/partner": {
      "filePath": "partner.tsx"
    },
    "/sources": {
      "filePath": "sources.tsx"
    },
    "/_protected/_compte": {
      "filePath": "_protected/_compte/route.tsx",
      "parent": "/_protected",
      "children": [
        "/_protected/_compte/compte/preferences",
        "/_protected/_compte/compte/entreprises/add",
        "/_protected/_compte/compte/entreprises/",
        "/_protected/_compte/compte/entreprises/$entrepriseId/edit"
      ]
    },
    "/_auth/forgot-password": {
      "filePath": "_auth/forgot-password.tsx"
    },
    "/_auth/login": {
      "filePath": "_auth/login.tsx"
    },
    "/_auth/reset-password": {
      "filePath": "_auth/reset-password.tsx"
    },
    "/_auth/signup": {
      "filePath": "_auth/signup.tsx"
    },
    "/_protected/reference": {
      "filePath": "_protected/reference.tsx",
      "parent": "/_protected"
    },
    "/categories/$categoryId": {
      "filePath": "categories/$categoryId.tsx"
    },
    "/entreprises/$entrepriseId": {
      "filePath": "entreprises/$entrepriseId.tsx"
    },
    "/categories/": {
      "filePath": "categories/index.tsx"
    },
    "/entrepreneurs/": {
      "filePath": "entrepreneurs/index.tsx"
    },
    "/_admin/admin/dashboard": {
      "filePath": "_admin/admin/dashboard.tsx",
      "parent": "/_admin"
    },
    "/_protected/_compte/compte/preferences": {
      "filePath": "_protected/_compte/compte/preferences.tsx",
      "parent": "/_protected/_compte"
    },
    "/_protected/_compte/compte/entreprises/add": {
      "filePath": "_protected/_compte/compte/entreprises/add.tsx",
      "parent": "/_protected/_compte"
    },
    "/_protected/_compte/compte/entreprises/": {
      "filePath": "_protected/_compte/compte/entreprises/index.tsx",
      "parent": "/_protected/_compte"
    },
    "/_protected/_compte/compte/entreprises/$entrepriseId/edit": {
      "filePath": "_protected/_compte/compte/entreprises/$entrepriseId/edit.tsx",
      "parent": "/_protected/_compte"
    }
  }
}
ROUTE_MANIFEST_END */
