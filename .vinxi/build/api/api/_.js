import{betterAuth as p}from"better-auth";import{drizzleAdapter as m}from"better-auth/adapters/drizzle";import{admin as _}from"better-auth/plugins";import{drizzle as f}from"drizzle-orm/postgres-js";import A from"postgres";import{config as N}from"dotenv";import{pgTable as o,timestamp as t,text as e,boolean as i,varchar as a}from"drizzle-orm/pg-core";import{reactStartCookies as b}from"better-auth/react-start";import{Resend as h}from"resend";import{a as g}from"./assets/index-I3xEeSmG.js";import"@tanstack/start-server-core";N({path:".env"});const k=A(process.env.DATABASE_URL,{prepare:!1}),x=f({client:k}),n=o("user",{id:e("id").primaryKey(),name:a("first_name",{length:255}).notNull(),email:a("email",{length:255}).notNull().unique(),emailVerified:i("email_verified").notNull(),image:a("image",{length:255}),createdAt:t("created_at").notNull(),updatedAt:t("updated_at").notNull(),role:a("role",{length:255}).$type().default("user").notNull(),banned:i("banned"),banReason:e("ban_reason"),banExpires:t("ban_expires")}),y=o("session",{id:e("id").primaryKey(),expiresAt:t("expires_at").notNull(),token:e("token").notNull().unique(),createdAt:t("created_at").notNull(),updatedAt:t("updated_at").notNull(),ipAddress:e("ip_address"),userAgent:e("user_agent"),userId:e("user_id").notNull().references(()=>n.id,{onDelete:"cascade"}),impersonatedBy:e("impersonated_by")}),v=o("account",{id:e("id").primaryKey(),accountId:e("account_id").notNull(),providerId:e("provider_id").notNull(),userId:e("user_id").notNull().references(()=>n.id,{onDelete:"cascade"}),accessToken:e("access_token"),refreshToken:e("refresh_token"),idToken:e("id_token"),accessTokenExpiresAt:t("access_token_expires_at"),refreshTokenExpiresAt:t("refresh_token_expires_at"),scope:e("scope"),password:e("password"),createdAt:t("created_at").notNull(),updatedAt:t("updated_at").notNull()}),E=o("verification",{id:e("id").primaryKey(),identifier:e("identifier").notNull(),value:e("value").notNull(),expiresAt:t("expires_at").notNull(),createdAt:t("created_at"),updatedAt:t("updated_at")}),d=p({database:m(x,{provider:"pg",schema:{user:n,session:y,account:v,verification:E}}),session:{cookieCache:{enabled:!0,maxAge:5*60}},plugins:[_({adminRoles:["admin","superadmin"]}),b()],emailAndPassword:{enabled:!0,sendResetPassword:async({user:r,url:l,token:R})=>{const u=new h(process.env.RESEND_API_KEY),{data:c,error:s}=await u.emails.send({from:"Acme <onboarding@resend.dev>",to:r.email,subject:"Reset your password",text:`Click ${l} to reset your password`});s&&console.error(s),console.log(c)}},user:{deleteUser:{enabled:!0},changeEmail:{enabled:!0}}}),B=g("/api/auth/$")({GET:({request:r})=>d.handler(r),POST:({request:r})=>d.handler(r)});export{B as APIRoute};
