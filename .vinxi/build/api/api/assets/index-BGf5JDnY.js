import{eventHandler as d,toWebRequest as f}from"@tanstack/start-server-core";const _=[{path:"/__root",filePath:"/Users/kirdes/Dev/@annuaire-tih/app/routes/__root.tsx"},{path:"/_admin/route",filePath:"/Users/kirdes/Dev/@annuaire-tih/app/routes/_admin/route.tsx"},{path:"/_auth/forgot-password",filePath:"/Users/kirdes/Dev/@annuaire-tih/app/routes/_auth/forgot-password.tsx"},{path:"/_auth/login",filePath:"/Users/kirdes/Dev/@annuaire-tih/app/routes/_auth/login.tsx"},{path:"/_auth/reset-password",filePath:"/Users/kirdes/Dev/@annuaire-tih/app/routes/_auth/reset-password.tsx"},{path:"/_auth/signup",filePath:"/Users/kirdes/Dev/@annuaire-tih/app/routes/_auth/signup.tsx"},{path:"/_protected/reference",filePath:"/Users/kirdes/Dev/@annuaire-tih/app/routes/_protected/reference.tsx"},{path:"/_protected/route",filePath:"/Users/kirdes/Dev/@annuaire-tih/app/routes/_protected/route.tsx"},{path:"/_public/about",filePath:"/Users/kirdes/Dev/@annuaire-tih/app/routes/_public/about.tsx"},{path:"/_public/contact",filePath:"/Users/kirdes/Dev/@annuaire-tih/app/routes/_public/contact.tsx"},{path:"/_public/faq",filePath:"/Users/kirdes/Dev/@annuaire-tih/app/routes/_public/faq.tsx"},{path:"/_public",filePath:"/Users/kirdes/Dev/@annuaire-tih/app/routes/_public/index.tsx"},{path:"/_public/partner",filePath:"/Users/kirdes/Dev/@annuaire-tih/app/routes/_public/partner.tsx"},{path:"/_public/sources",filePath:"/Users/kirdes/Dev/@annuaire-tih/app/routes/_public/sources.tsx"},{path:"/_admin/admin/dashboard",filePath:"/Users/kirdes/Dev/@annuaire-tih/app/routes/_admin/admin/dashboard.tsx"},{path:"/_protected/_compte/route",filePath:"/Users/kirdes/Dev/@annuaire-tih/app/routes/_protected/_compte/route.tsx"},{path:"/_public/categories/:$id?",filePath:"/Users/kirdes/Dev/@annuaire-tih/app/routes/_public/categories/$id.tsx"},{path:"/_public/categories",filePath:"/Users/kirdes/Dev/@annuaire-tih/app/routes/_public/categories/index.tsx"},{path:"/_public/entrepreneurs",filePath:"/Users/kirdes/Dev/@annuaire-tih/app/routes/_public/entrepreneurs/index.tsx"},{path:"/_public/entreprises/:$name?",filePath:"/Users/kirdes/Dev/@annuaire-tih/app/routes/_public/entreprises/$name.tsx"},{path:"/api/auth/*splat",filePath:"/Users/kirdes/Dev/@annuaire-tih/app/routes/api/auth/$.ts",$APIRoute:{src:"app/routes/api/auth/$.ts?pick=APIRoute",build:()=>import("../_.js"),import:()=>import("../_.js")}},{path:"/_protected/_compte/compte/preferences",filePath:"/Users/kirdes/Dev/@annuaire-tih/app/routes/_protected/_compte/compte/preferences.tsx"},{path:"/_protected/_compte/compte/entreprises/add",filePath:"/Users/kirdes/Dev/@annuaire-tih/app/routes/_protected/_compte/compte/entreprises/add.tsx"},{path:"/_protected/_compte/compte/entreprises",filePath:"/Users/kirdes/Dev/@annuaire-tih/app/routes/_protected/_compte/compte/entreprises/index.tsx"},{path:"/_protected/_compte/compte/entreprises/preview",filePath:"/Users/kirdes/Dev/@annuaire-tih/app/routes/_protected/_compte/compte/entreprises/preview.tsx"},{path:"/_protected/_compte/compte/entreprises/:$id?/edit",filePath:"/Users/kirdes/Dev/@annuaire-tih/app/routes/_protected/_compte/compte/entreprises/$id/edit.tsx"}],m=["GET","POST","PUT","PATCH","DELETE","OPTIONS","HEAD"];function b(e){return d(async s=>{const a=f(s);return await e({request:a})})}const k=e=>s=>({path:e,methods:s});function P(e,s){const a=e.pathname.split("/").filter(Boolean),p=s.sort((r,t)=>{const i=r.routePath.split("/").filter(Boolean);return t.routePath.split("/").filter(Boolean).length-i.length}).filter(r=>{const t=r.routePath.split("/").filter(Boolean);return a.length>=t.length});for(const r of p){const t=r.routePath.split("/").filter(Boolean),i={};let o=!0;for(let n=0;n<t.length;n++){const h=t[n],c=a[n];if(h.startsWith("$"))if(h==="$"){const u=a.slice(n).join("/");if(u!=="")i["*"]=u,i._splat=u;else{o=!1;break}}else{const u=h.slice(1);i[u]=c}else if(h!==c){o=!1;break}}if(o)return{routePath:r.routePath,params:i,payload:r.payload}}}const l=_.filter(e=>e.$APIRoute);function v(e){const s=[];return e.forEach(a=>{const r=a.path.split("/").filter(Boolean).map(t=>t==="*splat"?"$":t.startsWith(":$")&&t.endsWith("?")?t.slice(1,-1):t).join("/");s.push({routePath:`/${r}`,payload:a})}),s}const D=async({request:e})=>{if(!l.length)return new Response("No routes found",{status:404});if(!m.includes(e.method))return new Response("Method not allowed",{status:405});const s=v(l),a=new URL(e.url,"http://localhost:3000"),p=P(a,s);if(!p)return new Response("Not found",{status:404});let r;try{r=await p.payload.$APIRoute.import().then(o=>o.APIRoute)}catch(o){return console.error("Error importing route file:",o),new Response("Internal server error",{status:500})}if(!r)return new Response("Internal server error",{status:500});const t=e.method,i=r.methods[t];return i?await i({request:e,params:p.params}):new Response("Method not allowed",{status:405})};export{k as a,b as c,D as d};
