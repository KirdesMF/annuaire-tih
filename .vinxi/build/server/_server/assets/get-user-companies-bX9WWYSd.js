import{eq as s,desc as p,inArray as d}from"drizzle-orm";import{c as _,d as m}from"./index-8Htcofqc.js";import{c as i}from"./categories-B1A9pQfz.js";import{c as e}from"./companies-l5PKOmvG.js";import{c as t}from"./company-categories-CgBd9Wjc.js";import{createServerFn as l}from"@tanstack/start-client-core";import"tiny-invariant";import"drizzle-orm/postgres-js";import"postgres";import"dotenv";import"drizzle-orm/pg-core";import"nanoid";import"./auth-BsEI6_U5.js";const g=_("app_lib_api_users_queries_get-user-companies_ts--getUserCompanies_createServerFn_handler","/_server",(r,o)=>u.__executeServer(r,o)),u=l({method:"GET"}).validator(r=>r).handler(g,async({data:r})=>{const o=await m.select({id:e.id,name:e.name,description:e.description,status:e.status,siret:e.siret,business_owner:e.business_owner,website:e.website,service_area:e.service_area,subdomain:e.subdomain,email:e.email,phone:e.phone,work_mode:e.work_mode,rqth:e.rqth,logo:e.logo,gallery:e.gallery,slug:e.slug}).from(e).where(s(e.user_id,r)).orderBy(p(e.created_at)),n=await m.select({company_id:t.company_id,category_id:i.id,category_name:i.name}).from(t).leftJoin(i,s(i.id,t.category_id)).where(d(t.company_id,o.map(a=>a.id)));return o.map(a=>({...a,categories:n.filter(c=>c.company_id===a.id)}))});export{g as getUserCompanies_createServerFn_handler};
