import{eq as o}from"drizzle-orm";import{c as d,d as i}from"./index-8Htcofqc.js";import{c as r}from"./companies-l5PKOmvG.js";import{a as n}from"./cloudinary-BTIR3bRv.js";import{createServerFn as l}from"@tanstack/start-client-core";import"tiny-invariant";import"drizzle-orm/postgres-js";import"postgres";import"dotenv";import"drizzle-orm/pg-core";import"./auth-BsEI6_U5.js";import"nanoid";import"cloudinary";const y=d("app_lib_api_companies_mutations_delete-company-media_ts--deleteCompanyLogo_createServerFn_handler","/_server",(e,a)=>h.__executeServer(e,a)),u=d("app_lib_api_companies_mutations_delete-company-media_ts--deleteCompanyMedia_createServerFn_handler","/_server",(e,a)=>w.__executeServer(e,a)),h=l({method:"POST"}).validator(e=>e).handler(y,async({data:e})=>{const{companyId:a,publicId:t}=e;await n(t),await i.update(r).set({logo:null}).where(o(r.id,a))}),w=l({method:"POST"}).validator(e=>e).handler(u,async({data:e})=>{const{companyId:a,publicId:t,type:m,index:c}=e;if(m==="logo"&&(await n(t),await i.update(r).set({logo:null}).where(o(r.id,a))),m==="gallery"){const[p]=await i.select().from(r).where(o(r.id,a));if(!p)throw new Error("Company not found");const s=p.gallery.filter((v,_)=>_!==c);await n(t),await i.update(r).set({gallery:s}).where(o(r.id,a))}});export{y as deleteCompanyLogo_createServerFn_handler,u as deleteCompanyMedia_createServerFn_handler};
