/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ProtectedRouteImport } from './routes/_protected/route'
import { Route as AdminRouteImport } from './routes/_admin/route'
import { Route as PublicIndexImport } from './routes/_public/index'
import { Route as PublicSourcesImport } from './routes/_public/sources'
import { Route as PublicPartnerImport } from './routes/_public/partner'
import { Route as PublicFaqImport } from './routes/_public/faq'
import { Route as PublicContactImport } from './routes/_public/contact'
import { Route as PublicAboutImport } from './routes/_public/about'
import { Route as ProtectedReferenceImport } from './routes/_protected/reference'
import { Route as AuthSignupImport } from './routes/_auth/signup'
import { Route as AuthResetPasswordImport } from './routes/_auth/reset-password'
import { Route as AuthLoginImport } from './routes/_auth/login'
import { Route as AuthForgotPasswordImport } from './routes/_auth/forgot-password'
import { Route as ProtectedCompteRouteImport } from './routes/_protected/_compte/route'
import { Route as PublicEntrepreneursIndexImport } from './routes/_public/entrepreneurs/index'
import { Route as PublicCategoriesIndexImport } from './routes/_public/categories/index'
import { Route as PublicEntreprisesNameImport } from './routes/_public/entreprises/$name'
import { Route as PublicCategoriesIdImport } from './routes/_public/categories/$id'
import { Route as AdminAdminDashboardImport } from './routes/_admin/admin/dashboard'
import { Route as ProtectedCompteComptePreferencesImport } from './routes/_protected/_compte/compte/preferences'
import { Route as ProtectedCompteCompteEntreprisesIndexImport } from './routes/_protected/_compte/compte/entreprises/index'
import { Route as ProtectedCompteCompteEntreprisesAddImport } from './routes/_protected/_compte/compte/entreprises/add'
import { Route as ProtectedCompteCompteEntreprisesIdEditImport } from './routes/_protected/_compte/compte/entreprises/$id/edit'

// Create/Update Routes

const ProtectedRouteRoute = ProtectedRouteImport.update({
  id: '/_protected',
  getParentRoute: () => rootRoute,
} as any)

const AdminRouteRoute = AdminRouteImport.update({
  id: '/_admin',
  getParentRoute: () => rootRoute,
} as any)

const PublicIndexRoute = PublicIndexImport.update({
  id: '/_public/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const PublicSourcesRoute = PublicSourcesImport.update({
  id: '/_public/sources',
  path: '/sources',
  getParentRoute: () => rootRoute,
} as any)

const PublicPartnerRoute = PublicPartnerImport.update({
  id: '/_public/partner',
  path: '/partner',
  getParentRoute: () => rootRoute,
} as any)

const PublicFaqRoute = PublicFaqImport.update({
  id: '/_public/faq',
  path: '/faq',
  getParentRoute: () => rootRoute,
} as any)

const PublicContactRoute = PublicContactImport.update({
  id: '/_public/contact',
  path: '/contact',
  getParentRoute: () => rootRoute,
} as any)

const PublicAboutRoute = PublicAboutImport.update({
  id: '/_public/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const ProtectedReferenceRoute = ProtectedReferenceImport.update({
  id: '/reference',
  path: '/reference',
  getParentRoute: () => ProtectedRouteRoute,
} as any)

const AuthSignupRoute = AuthSignupImport.update({
  id: '/_auth/signup',
  path: '/signup',
  getParentRoute: () => rootRoute,
} as any)

const AuthResetPasswordRoute = AuthResetPasswordImport.update({
  id: '/_auth/reset-password',
  path: '/reset-password',
  getParentRoute: () => rootRoute,
} as any)

const AuthLoginRoute = AuthLoginImport.update({
  id: '/_auth/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const AuthForgotPasswordRoute = AuthForgotPasswordImport.update({
  id: '/_auth/forgot-password',
  path: '/forgot-password',
  getParentRoute: () => rootRoute,
} as any)

const ProtectedCompteRouteRoute = ProtectedCompteRouteImport.update({
  id: '/_compte',
  getParentRoute: () => ProtectedRouteRoute,
} as any)

const PublicEntrepreneursIndexRoute = PublicEntrepreneursIndexImport.update({
  id: '/_public/entrepreneurs/',
  path: '/entrepreneurs/',
  getParentRoute: () => rootRoute,
} as any)

const PublicCategoriesIndexRoute = PublicCategoriesIndexImport.update({
  id: '/_public/categories/',
  path: '/categories/',
  getParentRoute: () => rootRoute,
} as any)

const PublicEntreprisesNameRoute = PublicEntreprisesNameImport.update({
  id: '/_public/entreprises/$name',
  path: '/entreprises/$name',
  getParentRoute: () => rootRoute,
} as any)

const PublicCategoriesIdRoute = PublicCategoriesIdImport.update({
  id: '/_public/categories/$id',
  path: '/categories/$id',
  getParentRoute: () => rootRoute,
} as any)

const AdminAdminDashboardRoute = AdminAdminDashboardImport.update({
  id: '/admin/dashboard',
  path: '/admin/dashboard',
  getParentRoute: () => AdminRouteRoute,
} as any)

const ProtectedCompteComptePreferencesRoute =
  ProtectedCompteComptePreferencesImport.update({
    id: '/compte/preferences',
    path: '/compte/preferences',
    getParentRoute: () => ProtectedCompteRouteRoute,
  } as any)

const ProtectedCompteCompteEntreprisesIndexRoute =
  ProtectedCompteCompteEntreprisesIndexImport.update({
    id: '/compte/entreprises/',
    path: '/compte/entreprises/',
    getParentRoute: () => ProtectedCompteRouteRoute,
  } as any)

const ProtectedCompteCompteEntreprisesAddRoute =
  ProtectedCompteCompteEntreprisesAddImport.update({
    id: '/compte/entreprises/add',
    path: '/compte/entreprises/add',
    getParentRoute: () => ProtectedCompteRouteRoute,
  } as any)

const ProtectedCompteCompteEntreprisesIdEditRoute =
  ProtectedCompteCompteEntreprisesIdEditImport.update({
    id: '/compte/entreprises/$id/edit',
    path: '/compte/entreprises/$id/edit',
    getParentRoute: () => ProtectedCompteRouteRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_admin': {
      id: '/_admin'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AdminRouteImport
      parentRoute: typeof rootRoute
    }
    '/_protected': {
      id: '/_protected'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof ProtectedRouteImport
      parentRoute: typeof rootRoute
    }
    '/_protected/_compte': {
      id: '/_protected/_compte'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof ProtectedCompteRouteImport
      parentRoute: typeof ProtectedRouteImport
    }
    '/_auth/forgot-password': {
      id: '/_auth/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof AuthForgotPasswordImport
      parentRoute: typeof rootRoute
    }
    '/_auth/login': {
      id: '/_auth/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof AuthLoginImport
      parentRoute: typeof rootRoute
    }
    '/_auth/reset-password': {
      id: '/_auth/reset-password'
      path: '/reset-password'
      fullPath: '/reset-password'
      preLoaderRoute: typeof AuthResetPasswordImport
      parentRoute: typeof rootRoute
    }
    '/_auth/signup': {
      id: '/_auth/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof AuthSignupImport
      parentRoute: typeof rootRoute
    }
    '/_protected/reference': {
      id: '/_protected/reference'
      path: '/reference'
      fullPath: '/reference'
      preLoaderRoute: typeof ProtectedReferenceImport
      parentRoute: typeof ProtectedRouteImport
    }
    '/_public/about': {
      id: '/_public/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof PublicAboutImport
      parentRoute: typeof rootRoute
    }
    '/_public/contact': {
      id: '/_public/contact'
      path: '/contact'
      fullPath: '/contact'
      preLoaderRoute: typeof PublicContactImport
      parentRoute: typeof rootRoute
    }
    '/_public/faq': {
      id: '/_public/faq'
      path: '/faq'
      fullPath: '/faq'
      preLoaderRoute: typeof PublicFaqImport
      parentRoute: typeof rootRoute
    }
    '/_public/partner': {
      id: '/_public/partner'
      path: '/partner'
      fullPath: '/partner'
      preLoaderRoute: typeof PublicPartnerImport
      parentRoute: typeof rootRoute
    }
    '/_public/sources': {
      id: '/_public/sources'
      path: '/sources'
      fullPath: '/sources'
      preLoaderRoute: typeof PublicSourcesImport
      parentRoute: typeof rootRoute
    }
    '/_public/': {
      id: '/_public/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof PublicIndexImport
      parentRoute: typeof rootRoute
    }
    '/_admin/admin/dashboard': {
      id: '/_admin/admin/dashboard'
      path: '/admin/dashboard'
      fullPath: '/admin/dashboard'
      preLoaderRoute: typeof AdminAdminDashboardImport
      parentRoute: typeof AdminRouteImport
    }
    '/_public/categories/$id': {
      id: '/_public/categories/$id'
      path: '/categories/$id'
      fullPath: '/categories/$id'
      preLoaderRoute: typeof PublicCategoriesIdImport
      parentRoute: typeof rootRoute
    }
    '/_public/entreprises/$name': {
      id: '/_public/entreprises/$name'
      path: '/entreprises/$name'
      fullPath: '/entreprises/$name'
      preLoaderRoute: typeof PublicEntreprisesNameImport
      parentRoute: typeof rootRoute
    }
    '/_public/categories/': {
      id: '/_public/categories/'
      path: '/categories'
      fullPath: '/categories'
      preLoaderRoute: typeof PublicCategoriesIndexImport
      parentRoute: typeof rootRoute
    }
    '/_public/entrepreneurs/': {
      id: '/_public/entrepreneurs/'
      path: '/entrepreneurs'
      fullPath: '/entrepreneurs'
      preLoaderRoute: typeof PublicEntrepreneursIndexImport
      parentRoute: typeof rootRoute
    }
    '/_protected/_compte/compte/preferences': {
      id: '/_protected/_compte/compte/preferences'
      path: '/compte/preferences'
      fullPath: '/compte/preferences'
      preLoaderRoute: typeof ProtectedCompteComptePreferencesImport
      parentRoute: typeof ProtectedCompteRouteImport
    }
    '/_protected/_compte/compte/entreprises/add': {
      id: '/_protected/_compte/compte/entreprises/add'
      path: '/compte/entreprises/add'
      fullPath: '/compte/entreprises/add'
      preLoaderRoute: typeof ProtectedCompteCompteEntreprisesAddImport
      parentRoute: typeof ProtectedCompteRouteImport
    }
    '/_protected/_compte/compte/entreprises/': {
      id: '/_protected/_compte/compte/entreprises/'
      path: '/compte/entreprises'
      fullPath: '/compte/entreprises'
      preLoaderRoute: typeof ProtectedCompteCompteEntreprisesIndexImport
      parentRoute: typeof ProtectedCompteRouteImport
    }
    '/_protected/_compte/compte/entreprises/$id/edit': {
      id: '/_protected/_compte/compte/entreprises/$id/edit'
      path: '/compte/entreprises/$id/edit'
      fullPath: '/compte/entreprises/$id/edit'
      preLoaderRoute: typeof ProtectedCompteCompteEntreprisesIdEditImport
      parentRoute: typeof ProtectedCompteRouteImport
    }
  }
}

// Create and export the route tree

interface AdminRouteRouteChildren {
  AdminAdminDashboardRoute: typeof AdminAdminDashboardRoute
}

const AdminRouteRouteChildren: AdminRouteRouteChildren = {
  AdminAdminDashboardRoute: AdminAdminDashboardRoute,
}

const AdminRouteRouteWithChildren = AdminRouteRoute._addFileChildren(
  AdminRouteRouteChildren,
)

interface ProtectedCompteRouteRouteChildren {
  ProtectedCompteComptePreferencesRoute: typeof ProtectedCompteComptePreferencesRoute
  ProtectedCompteCompteEntreprisesAddRoute: typeof ProtectedCompteCompteEntreprisesAddRoute
  ProtectedCompteCompteEntreprisesIndexRoute: typeof ProtectedCompteCompteEntreprisesIndexRoute
  ProtectedCompteCompteEntreprisesIdEditRoute: typeof ProtectedCompteCompteEntreprisesIdEditRoute
}

const ProtectedCompteRouteRouteChildren: ProtectedCompteRouteRouteChildren = {
  ProtectedCompteComptePreferencesRoute: ProtectedCompteComptePreferencesRoute,
  ProtectedCompteCompteEntreprisesAddRoute:
    ProtectedCompteCompteEntreprisesAddRoute,
  ProtectedCompteCompteEntreprisesIndexRoute:
    ProtectedCompteCompteEntreprisesIndexRoute,
  ProtectedCompteCompteEntreprisesIdEditRoute:
    ProtectedCompteCompteEntreprisesIdEditRoute,
}

const ProtectedCompteRouteRouteWithChildren =
  ProtectedCompteRouteRoute._addFileChildren(ProtectedCompteRouteRouteChildren)

interface ProtectedRouteRouteChildren {
  ProtectedCompteRouteRoute: typeof ProtectedCompteRouteRouteWithChildren
  ProtectedReferenceRoute: typeof ProtectedReferenceRoute
}

const ProtectedRouteRouteChildren: ProtectedRouteRouteChildren = {
  ProtectedCompteRouteRoute: ProtectedCompteRouteRouteWithChildren,
  ProtectedReferenceRoute: ProtectedReferenceRoute,
}

const ProtectedRouteRouteWithChildren = ProtectedRouteRoute._addFileChildren(
  ProtectedRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof ProtectedCompteRouteRouteWithChildren
  '/forgot-password': typeof AuthForgotPasswordRoute
  '/login': typeof AuthLoginRoute
  '/reset-password': typeof AuthResetPasswordRoute
  '/signup': typeof AuthSignupRoute
  '/reference': typeof ProtectedReferenceRoute
  '/about': typeof PublicAboutRoute
  '/contact': typeof PublicContactRoute
  '/faq': typeof PublicFaqRoute
  '/partner': typeof PublicPartnerRoute
  '/sources': typeof PublicSourcesRoute
  '/': typeof PublicIndexRoute
  '/admin/dashboard': typeof AdminAdminDashboardRoute
  '/categories/$id': typeof PublicCategoriesIdRoute
  '/entreprises/$name': typeof PublicEntreprisesNameRoute
  '/categories': typeof PublicCategoriesIndexRoute
  '/entrepreneurs': typeof PublicEntrepreneursIndexRoute
  '/compte/preferences': typeof ProtectedCompteComptePreferencesRoute
  '/compte/entreprises/add': typeof ProtectedCompteCompteEntreprisesAddRoute
  '/compte/entreprises': typeof ProtectedCompteCompteEntreprisesIndexRoute
  '/compte/entreprises/$id/edit': typeof ProtectedCompteCompteEntreprisesIdEditRoute
}

export interface FileRoutesByTo {
  '': typeof ProtectedCompteRouteRouteWithChildren
  '/forgot-password': typeof AuthForgotPasswordRoute
  '/login': typeof AuthLoginRoute
  '/reset-password': typeof AuthResetPasswordRoute
  '/signup': typeof AuthSignupRoute
  '/reference': typeof ProtectedReferenceRoute
  '/about': typeof PublicAboutRoute
  '/contact': typeof PublicContactRoute
  '/faq': typeof PublicFaqRoute
  '/partner': typeof PublicPartnerRoute
  '/sources': typeof PublicSourcesRoute
  '/': typeof PublicIndexRoute
  '/admin/dashboard': typeof AdminAdminDashboardRoute
  '/categories/$id': typeof PublicCategoriesIdRoute
  '/entreprises/$name': typeof PublicEntreprisesNameRoute
  '/categories': typeof PublicCategoriesIndexRoute
  '/entrepreneurs': typeof PublicEntrepreneursIndexRoute
  '/compte/preferences': typeof ProtectedCompteComptePreferencesRoute
  '/compte/entreprises/add': typeof ProtectedCompteCompteEntreprisesAddRoute
  '/compte/entreprises': typeof ProtectedCompteCompteEntreprisesIndexRoute
  '/compte/entreprises/$id/edit': typeof ProtectedCompteCompteEntreprisesIdEditRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_admin': typeof AdminRouteRouteWithChildren
  '/_protected': typeof ProtectedRouteRouteWithChildren
  '/_protected/_compte': typeof ProtectedCompteRouteRouteWithChildren
  '/_auth/forgot-password': typeof AuthForgotPasswordRoute
  '/_auth/login': typeof AuthLoginRoute
  '/_auth/reset-password': typeof AuthResetPasswordRoute
  '/_auth/signup': typeof AuthSignupRoute
  '/_protected/reference': typeof ProtectedReferenceRoute
  '/_public/about': typeof PublicAboutRoute
  '/_public/contact': typeof PublicContactRoute
  '/_public/faq': typeof PublicFaqRoute
  '/_public/partner': typeof PublicPartnerRoute
  '/_public/sources': typeof PublicSourcesRoute
  '/_public/': typeof PublicIndexRoute
  '/_admin/admin/dashboard': typeof AdminAdminDashboardRoute
  '/_public/categories/$id': typeof PublicCategoriesIdRoute
  '/_public/entreprises/$name': typeof PublicEntreprisesNameRoute
  '/_public/categories/': typeof PublicCategoriesIndexRoute
  '/_public/entrepreneurs/': typeof PublicEntrepreneursIndexRoute
  '/_protected/_compte/compte/preferences': typeof ProtectedCompteComptePreferencesRoute
  '/_protected/_compte/compte/entreprises/add': typeof ProtectedCompteCompteEntreprisesAddRoute
  '/_protected/_compte/compte/entreprises/': typeof ProtectedCompteCompteEntreprisesIndexRoute
  '/_protected/_compte/compte/entreprises/$id/edit': typeof ProtectedCompteCompteEntreprisesIdEditRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/forgot-password'
    | '/login'
    | '/reset-password'
    | '/signup'
    | '/reference'
    | '/about'
    | '/contact'
    | '/faq'
    | '/partner'
    | '/sources'
    | '/'
    | '/admin/dashboard'
    | '/categories/$id'
    | '/entreprises/$name'
    | '/categories'
    | '/entrepreneurs'
    | '/compte/preferences'
    | '/compte/entreprises/add'
    | '/compte/entreprises'
    | '/compte/entreprises/$id/edit'
  fileRoutesByTo: FileRoutesByTo
  to:
    | ''
    | '/forgot-password'
    | '/login'
    | '/reset-password'
    | '/signup'
    | '/reference'
    | '/about'
    | '/contact'
    | '/faq'
    | '/partner'
    | '/sources'
    | '/'
    | '/admin/dashboard'
    | '/categories/$id'
    | '/entreprises/$name'
    | '/categories'
    | '/entrepreneurs'
    | '/compte/preferences'
    | '/compte/entreprises/add'
    | '/compte/entreprises'
    | '/compte/entreprises/$id/edit'
  id:
    | '__root__'
    | '/_admin'
    | '/_protected'
    | '/_protected/_compte'
    | '/_auth/forgot-password'
    | '/_auth/login'
    | '/_auth/reset-password'
    | '/_auth/signup'
    | '/_protected/reference'
    | '/_public/about'
    | '/_public/contact'
    | '/_public/faq'
    | '/_public/partner'
    | '/_public/sources'
    | '/_public/'
    | '/_admin/admin/dashboard'
    | '/_public/categories/$id'
    | '/_public/entreprises/$name'
    | '/_public/categories/'
    | '/_public/entrepreneurs/'
    | '/_protected/_compte/compte/preferences'
    | '/_protected/_compte/compte/entreprises/add'
    | '/_protected/_compte/compte/entreprises/'
    | '/_protected/_compte/compte/entreprises/$id/edit'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AdminRouteRoute: typeof AdminRouteRouteWithChildren
  ProtectedRouteRoute: typeof ProtectedRouteRouteWithChildren
  AuthForgotPasswordRoute: typeof AuthForgotPasswordRoute
  AuthLoginRoute: typeof AuthLoginRoute
  AuthResetPasswordRoute: typeof AuthResetPasswordRoute
  AuthSignupRoute: typeof AuthSignupRoute
  PublicAboutRoute: typeof PublicAboutRoute
  PublicContactRoute: typeof PublicContactRoute
  PublicFaqRoute: typeof PublicFaqRoute
  PublicPartnerRoute: typeof PublicPartnerRoute
  PublicSourcesRoute: typeof PublicSourcesRoute
  PublicIndexRoute: typeof PublicIndexRoute
  PublicCategoriesIdRoute: typeof PublicCategoriesIdRoute
  PublicEntreprisesNameRoute: typeof PublicEntreprisesNameRoute
  PublicCategoriesIndexRoute: typeof PublicCategoriesIndexRoute
  PublicEntrepreneursIndexRoute: typeof PublicEntrepreneursIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  AdminRouteRoute: AdminRouteRouteWithChildren,
  ProtectedRouteRoute: ProtectedRouteRouteWithChildren,
  AuthForgotPasswordRoute: AuthForgotPasswordRoute,
  AuthLoginRoute: AuthLoginRoute,
  AuthResetPasswordRoute: AuthResetPasswordRoute,
  AuthSignupRoute: AuthSignupRoute,
  PublicAboutRoute: PublicAboutRoute,
  PublicContactRoute: PublicContactRoute,
  PublicFaqRoute: PublicFaqRoute,
  PublicPartnerRoute: PublicPartnerRoute,
  PublicSourcesRoute: PublicSourcesRoute,
  PublicIndexRoute: PublicIndexRoute,
  PublicCategoriesIdRoute: PublicCategoriesIdRoute,
  PublicEntreprisesNameRoute: PublicEntreprisesNameRoute,
  PublicCategoriesIndexRoute: PublicCategoriesIndexRoute,
  PublicEntrepreneursIndexRoute: PublicEntrepreneursIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_admin",
        "/_protected",
        "/_auth/forgot-password",
        "/_auth/login",
        "/_auth/reset-password",
        "/_auth/signup",
        "/_public/about",
        "/_public/contact",
        "/_public/faq",
        "/_public/partner",
        "/_public/sources",
        "/_public/",
        "/_public/categories/$id",
        "/_public/entreprises/$name",
        "/_public/categories/",
        "/_public/entrepreneurs/"
      ]
    },
    "/_admin": {
      "filePath": "_admin/route.tsx",
      "children": [
        "/_admin/admin/dashboard"
      ]
    },
    "/_protected": {
      "filePath": "_protected/route.tsx",
      "children": [
        "/_protected/_compte",
        "/_protected/reference"
      ]
    },
    "/_protected/_compte": {
      "filePath": "_protected/_compte/route.tsx",
      "parent": "/_protected",
      "children": [
        "/_protected/_compte/compte/preferences",
        "/_protected/_compte/compte/entreprises/add",
        "/_protected/_compte/compte/entreprises/",
        "/_protected/_compte/compte/entreprises/$id/edit"
      ]
    },
    "/_auth/forgot-password": {
      "filePath": "_auth/forgot-password.tsx"
    },
    "/_auth/login": {
      "filePath": "_auth/login.tsx"
    },
    "/_auth/reset-password": {
      "filePath": "_auth/reset-password.tsx"
    },
    "/_auth/signup": {
      "filePath": "_auth/signup.tsx"
    },
    "/_protected/reference": {
      "filePath": "_protected/reference.tsx",
      "parent": "/_protected"
    },
    "/_public/about": {
      "filePath": "_public/about.tsx"
    },
    "/_public/contact": {
      "filePath": "_public/contact.tsx"
    },
    "/_public/faq": {
      "filePath": "_public/faq.tsx"
    },
    "/_public/partner": {
      "filePath": "_public/partner.tsx"
    },
    "/_public/sources": {
      "filePath": "_public/sources.tsx"
    },
    "/_public/": {
      "filePath": "_public/index.tsx"
    },
    "/_admin/admin/dashboard": {
      "filePath": "_admin/admin/dashboard.tsx",
      "parent": "/_admin"
    },
    "/_public/categories/$id": {
      "filePath": "_public/categories/$id.tsx"
    },
    "/_public/entreprises/$name": {
      "filePath": "_public/entreprises/$name.tsx"
    },
    "/_public/categories/": {
      "filePath": "_public/categories/index.tsx"
    },
    "/_public/entrepreneurs/": {
      "filePath": "_public/entrepreneurs/index.tsx"
    },
    "/_protected/_compte/compte/preferences": {
      "filePath": "_protected/_compte/compte/preferences.tsx",
      "parent": "/_protected/_compte"
    },
    "/_protected/_compte/compte/entreprises/add": {
      "filePath": "_protected/_compte/compte/entreprises/add.tsx",
      "parent": "/_protected/_compte"
    },
    "/_protected/_compte/compte/entreprises/": {
      "filePath": "_protected/_compte/compte/entreprises/index.tsx",
      "parent": "/_protected/_compte"
    },
    "/_protected/_compte/compte/entreprises/$id/edit": {
      "filePath": "_protected/_compte/compte/entreprises/$id/edit.tsx",
      "parent": "/_protected/_compte"
    }
  }
}
ROUTE_MANIFEST_END */
