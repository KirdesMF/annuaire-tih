import{pgTable as n,timestamp as t,text as e,boolean as s,varchar as a}from"drizzle-orm/pg-core";const d=["admin","user"],l=r=>r?d.includes(r):!1,i=n("user",{id:e("id").primaryKey(),name:a("first_name",{length:255}).notNull(),email:a("email",{length:255}).notNull().unique(),emailVerified:s("email_verified").notNull(),image:a("image",{length:255}),createdAt:t("created_at").notNull(),updatedAt:t("updated_at").notNull(),role:a("role",{length:255}).$type().default("user").notNull(),banned:s("banned"),banReason:e("ban_reason"),banExpires:t("ban_expires")}),u=n("session",{id:e("id").primaryKey(),expiresAt:t("expires_at").notNull(),token:e("token").notNull().unique(),createdAt:t("created_at").notNull(),updatedAt:t("updated_at").notNull(),ipAddress:e("ip_address"),userAgent:e("user_agent"),userId:e("user_id").notNull().references(()=>i.id,{onDelete:"cascade"}),impersonatedBy:e("impersonated_by")}),c=n("account",{id:e("id").primaryKey(),accountId:e("account_id").notNull(),providerId:e("provider_id").notNull(),userId:e("user_id").notNull().references(()=>i.id,{onDelete:"cascade"}),accessToken:e("access_token"),refreshToken:e("refresh_token"),idToken:e("id_token"),accessTokenExpiresAt:t("access_token_expires_at"),refreshTokenExpiresAt:t("refresh_token_expires_at"),scope:e("scope"),password:e("password"),createdAt:t("created_at").notNull(),updatedAt:t("updated_at").notNull()}),p=n("verification",{id:e("id").primaryKey(),identifier:e("identifier").notNull(),value:e("value").notNull(),expiresAt:t("expires_at").notNull(),createdAt:t("created_at"),updatedAt:t("updated_at")});export{c as a,l as i,u as s,i as u,p as v};
