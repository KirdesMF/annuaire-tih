import{redirect as a}from"@tanstack/react-router";import{eq as i}from"drizzle-orm";import{c as s,d as p}from"./index-8Htcofqc.js";import{c as t}from"./companies-l5PKOmvG.js";import{a as d}from"./auth.server-DtTByMvE.js";import{d as n}from"./cloudinary-BTIR3bRv.js";import{createServerFn as c}from"@tanstack/start-client-core";import{getWebRequest as l}from"@tanstack/start-server-core";import"tiny-invariant";import"drizzle-orm/postgres-js";import"postgres";import"dotenv";import"drizzle-orm/pg-core";import"./auth-BsEI6_U5.js";import"nanoid";import"better-auth";import"better-auth/adapters/drizzle";import"better-auth/plugins";import"better-auth/react-start";import"resend";import"cloudinary";const u=s("app_lib_api_users_mutations_delete-user_ts--deleteUser_createServerFn_handler","/_server",(e,r)=>_.__executeServer(e,r)),_=c({method:"POST"}).validator(e=>e).handler(u,async({data:e})=>{const r=l();if(!r)throw new Error("Request not found");const o=await p.select().from(t).where(i(t.user_id,e.userId));for(const m of o)await n(m.slug);throw await d.api.deleteUser({body:{},headers:r.headers}),a({to:"/"})});export{u as deleteUser_createServerFn_handler};
