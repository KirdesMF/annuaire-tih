import{isRedirect as y,isNotFound as C}from"@tanstack/router-core";import E from"tiny-invariant";import{eventHandler as T,toWebRequest as M,getResponseStatus as j,getEvent as I}from"@tanstack/start-server-core";import{startSerializer as f}from"@tanstack/start-client-core";const O={"app_routes_root_tsx--getSession_createServerFn_handler":{functionName:"getSession_createServerFn_handler",importer:()=>import("./assets/__root-314AODrE.js")},"app_routes_auth_signup_tsx--signupFn_createServerFn_handler":{functionName:"signupFn_createServerFn_handler",importer:()=>import("./assets/signup-DcEYNaAi.js")},"app_routes_auth_login_tsx--loginFn_createServerFn_handler":{functionName:"loginFn_createServerFn_handler",importer:()=>import("./assets/login-BhSqD-hQ.js")},"app_lib_api_categories_ts--getCategories_createServerFn_handler":{functionName:"getCategories_createServerFn_handler",importer:()=>import("./assets/categories-4UjoYAyj.js")},"app_lib_api_companies_ts--addCompany_createServerFn_handler":{functionName:"addCompany_createServerFn_handler",importer:()=>import("./assets/companies-Co9WOiyO.js")},"app_lib_api_companies_ts--deleteCompany_createServerFn_handler":{functionName:"deleteCompany_createServerFn_handler",importer:()=>import("./assets/companies-Co9WOiyO.js")},"app_lib_api_companies_ts--getCompany_createServerFn_handler":{functionName:"getCompany_createServerFn_handler",importer:()=>import("./assets/companies-Co9WOiyO.js")},"app_lib_api_user_ts--getUserCompanies_createServerFn_handler":{functionName:"getUserCompanies_createServerFn_handler",importer:()=>import("./assets/user-DodAozgJ.js")}},P=T(D),u=O;async function D(r){const t=M(r);return await A({request:t,event:r})}function L(r){return r.replace(/^\/|\/$/g,"")}async function A({request:r,event:t}){const a=new AbortController,i=a.signal,v=()=>a.abort();t.node.req.on("close",v);const h=r.method,g=new URL(r.url,"http://localhost:3000"),R=new RegExp(`${L("/_server")}/([^/?#]+)`),F=g.pathname.match(R),o=F?F[1]:null,c=Object.fromEntries(g.searchParams.entries()),_="createServerFn"in c,x="raw"in c;if(typeof o!="string")throw new Error("Invalid server action param for serverFnId: "+o);const m=u[o];if(!m)throw console.log("serverFnManifest",u),new Error("Server function info not found for "+o);let p;if(p=await m.importer(),!p)throw console.log("serverFnManifest",u),new Error("Server function module not resolved for "+o);const s=p[m.functionName];if(!s)throw console.log("serverFnManifest",u),console.log("fnModule",p),new Error(`Server function module export not resolved for serverFn ID: ${o}`);const b=["multipart/form-data","application/x-www-form-urlencoded"],l=await(async()=>{try{let e=await(async()=>{if(r.headers.get("Content-Type")&&b.some(n=>{var S;return(S=r.headers.get("Content-Type"))==null?void 0:S.includes(n)}))return E(h.toLowerCase()!=="get","GET requests with FormData payloads are not supported"),await s(await r.formData(),i);if(h.toLowerCase()==="get"){let n=c;return _&&(n=c.payload),n=n&&f.parse(n),await s(n,i)}const d=await r.text(),w=f.parse(d);return _?await s(w,i):await s(...w,i)})();return e.result instanceof Response?e.result:!_&&(e=e.result,e instanceof Response)?e:y(e)||C(e)?N(e):new Response(e!==void 0?f.stringify(e):void 0,{status:j(I()),headers:{"Content-Type":"application/json"}})}catch(e){return e instanceof Response?e:y(e)||C(e)?N(e):(console.info(),console.info("Server Fn Error!"),console.info(),console.error(e),console.info(),new Response(f.stringify(e),{status:500,headers:{"Content-Type":"application/json"}}))}})();if(t.node.req.removeListener("close",v),x)return l;if(l.headers.get("Content-Type")==="application/json"){const d=await l.clone().text();d&&JSON.stringify(JSON.parse(d))}return l}function N(r){const{headers:t,...a}=r;return new Response(JSON.stringify(a),{status:200,headers:{"Content-Type":"application/json",...t||{}}})}export{P as default};
