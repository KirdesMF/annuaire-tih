/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ProtectedRouteImport } from './routes/_protected/route'
import { Route as AdminRouteImport } from './routes/_admin/route'
import { Route as IndexImport } from './routes/index'
import { Route as publicSourcesImport } from './routes/(public)/sources'
import { Route as publicPartnerImport } from './routes/(public)/partner'
import { Route as publicFaqImport } from './routes/(public)/faq'
import { Route as publicContactImport } from './routes/(public)/contact'
import { Route as publicAboutImport } from './routes/(public)/about'
import { Route as authSignupImport } from './routes/(auth)/signup'
import { Route as authResetPasswordImport } from './routes/(auth)/reset-password'
import { Route as authLoginImport } from './routes/(auth)/login'
import { Route as authForgotPasswordImport } from './routes/(auth)/forgot-password'
import { Route as ProtectedCompteRouteImport } from './routes/_protected/_compte/route'
import { Route as AdminAdminDashboardImport } from './routes/_admin/admin/dashboard'
import { Route as publicEntreprisesSlugImport } from './routes/(public)/entreprises/$slug'
import { Route as publicCategoriesSlugImport } from './routes/(public)/categories/$slug'
import { Route as ProtectedCompteComptePreferencesImport } from './routes/_protected/_compte/compte/preferences'
import { Route as ProtectedCompteCompteEntreprisesIndexImport } from './routes/_protected/_compte/compte/entreprises/index'
import { Route as ProtectedCompteCompteEntreprisesAddIndexImport } from './routes/_protected/_compte/compte/entreprises/add/index'
import { Route as ProtectedCompteCompteEntreprisesAddPreviewImport } from './routes/_protected/_compte/compte/entreprises/add/preview'
import { Route as ProtectedCompteCompteEntreprisesSlugPreviewImport } from './routes/_protected/_compte/compte/entreprises/$slug/preview'
import { Route as ProtectedCompteCompteEntreprisesSlugEditImport } from './routes/_protected/_compte/compte/entreprises/$slug/edit'

// Create/Update Routes

const ProtectedRouteRoute = ProtectedRouteImport.update({
  id: '/_protected',
  getParentRoute: () => rootRoute,
} as any)

const AdminRouteRoute = AdminRouteImport.update({
  id: '/_admin',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const publicSourcesRoute = publicSourcesImport.update({
  id: '/(public)/sources',
  path: '/sources',
  getParentRoute: () => rootRoute,
} as any)

const publicPartnerRoute = publicPartnerImport.update({
  id: '/(public)/partner',
  path: '/partner',
  getParentRoute: () => rootRoute,
} as any)

const publicFaqRoute = publicFaqImport.update({
  id: '/(public)/faq',
  path: '/faq',
  getParentRoute: () => rootRoute,
} as any)

const publicContactRoute = publicContactImport.update({
  id: '/(public)/contact',
  path: '/contact',
  getParentRoute: () => rootRoute,
} as any)

const publicAboutRoute = publicAboutImport.update({
  id: '/(public)/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const authSignupRoute = authSignupImport.update({
  id: '/(auth)/signup',
  path: '/signup',
  getParentRoute: () => rootRoute,
} as any)

const authResetPasswordRoute = authResetPasswordImport.update({
  id: '/(auth)/reset-password',
  path: '/reset-password',
  getParentRoute: () => rootRoute,
} as any)

const authLoginRoute = authLoginImport.update({
  id: '/(auth)/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const authForgotPasswordRoute = authForgotPasswordImport.update({
  id: '/(auth)/forgot-password',
  path: '/forgot-password',
  getParentRoute: () => rootRoute,
} as any)

const ProtectedCompteRouteRoute = ProtectedCompteRouteImport.update({
  id: '/_compte',
  getParentRoute: () => ProtectedRouteRoute,
} as any)

const AdminAdminDashboardRoute = AdminAdminDashboardImport.update({
  id: '/admin/dashboard',
  path: '/admin/dashboard',
  getParentRoute: () => AdminRouteRoute,
} as any)

const publicEntreprisesSlugRoute = publicEntreprisesSlugImport.update({
  id: '/(public)/entreprises/$slug',
  path: '/entreprises/$slug',
  getParentRoute: () => rootRoute,
} as any)

const publicCategoriesSlugRoute = publicCategoriesSlugImport.update({
  id: '/(public)/categories/$slug',
  path: '/categories/$slug',
  getParentRoute: () => rootRoute,
} as any)

const ProtectedCompteComptePreferencesRoute =
  ProtectedCompteComptePreferencesImport.update({
    id: '/compte/preferences',
    path: '/compte/preferences',
    getParentRoute: () => ProtectedCompteRouteRoute,
  } as any)

const ProtectedCompteCompteEntreprisesIndexRoute =
  ProtectedCompteCompteEntreprisesIndexImport.update({
    id: '/compte/entreprises/',
    path: '/compte/entreprises/',
    getParentRoute: () => ProtectedCompteRouteRoute,
  } as any)

const ProtectedCompteCompteEntreprisesAddIndexRoute =
  ProtectedCompteCompteEntreprisesAddIndexImport.update({
    id: '/compte/entreprises/add/',
    path: '/compte/entreprises/add/',
    getParentRoute: () => ProtectedCompteRouteRoute,
  } as any)

const ProtectedCompteCompteEntreprisesAddPreviewRoute =
  ProtectedCompteCompteEntreprisesAddPreviewImport.update({
    id: '/compte/entreprises/add/preview',
    path: '/compte/entreprises/add/preview',
    getParentRoute: () => ProtectedCompteRouteRoute,
  } as any)

const ProtectedCompteCompteEntreprisesSlugPreviewRoute =
  ProtectedCompteCompteEntreprisesSlugPreviewImport.update({
    id: '/compte/entreprises/$slug/preview',
    path: '/compte/entreprises/$slug/preview',
    getParentRoute: () => ProtectedCompteRouteRoute,
  } as any)

const ProtectedCompteCompteEntreprisesSlugEditRoute =
  ProtectedCompteCompteEntreprisesSlugEditImport.update({
    id: '/compte/entreprises/$slug/edit',
    path: '/compte/entreprises/$slug/edit',
    getParentRoute: () => ProtectedCompteRouteRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_admin': {
      id: '/_admin'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AdminRouteImport
      parentRoute: typeof rootRoute
    }
    '/_protected': {
      id: '/_protected'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof ProtectedRouteImport
      parentRoute: typeof rootRoute
    }
    '/_protected/_compte': {
      id: '/_protected/_compte'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof ProtectedCompteRouteImport
      parentRoute: typeof ProtectedRouteImport
    }
    '/(auth)/forgot-password': {
      id: '/(auth)/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof authForgotPasswordImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/login': {
      id: '/(auth)/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof authLoginImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/reset-password': {
      id: '/(auth)/reset-password'
      path: '/reset-password'
      fullPath: '/reset-password'
      preLoaderRoute: typeof authResetPasswordImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/signup': {
      id: '/(auth)/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof authSignupImport
      parentRoute: typeof rootRoute
    }
    '/(public)/about': {
      id: '/(public)/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof publicAboutImport
      parentRoute: typeof rootRoute
    }
    '/(public)/contact': {
      id: '/(public)/contact'
      path: '/contact'
      fullPath: '/contact'
      preLoaderRoute: typeof publicContactImport
      parentRoute: typeof rootRoute
    }
    '/(public)/faq': {
      id: '/(public)/faq'
      path: '/faq'
      fullPath: '/faq'
      preLoaderRoute: typeof publicFaqImport
      parentRoute: typeof rootRoute
    }
    '/(public)/partner': {
      id: '/(public)/partner'
      path: '/partner'
      fullPath: '/partner'
      preLoaderRoute: typeof publicPartnerImport
      parentRoute: typeof rootRoute
    }
    '/(public)/sources': {
      id: '/(public)/sources'
      path: '/sources'
      fullPath: '/sources'
      preLoaderRoute: typeof publicSourcesImport
      parentRoute: typeof rootRoute
    }
    '/(public)/categories/$slug': {
      id: '/(public)/categories/$slug'
      path: '/categories/$slug'
      fullPath: '/categories/$slug'
      preLoaderRoute: typeof publicCategoriesSlugImport
      parentRoute: typeof rootRoute
    }
    '/(public)/entreprises/$slug': {
      id: '/(public)/entreprises/$slug'
      path: '/entreprises/$slug'
      fullPath: '/entreprises/$slug'
      preLoaderRoute: typeof publicEntreprisesSlugImport
      parentRoute: typeof rootRoute
    }
    '/_admin/admin/dashboard': {
      id: '/_admin/admin/dashboard'
      path: '/admin/dashboard'
      fullPath: '/admin/dashboard'
      preLoaderRoute: typeof AdminAdminDashboardImport
      parentRoute: typeof AdminRouteImport
    }
    '/_protected/_compte/compte/preferences': {
      id: '/_protected/_compte/compte/preferences'
      path: '/compte/preferences'
      fullPath: '/compte/preferences'
      preLoaderRoute: typeof ProtectedCompteComptePreferencesImport
      parentRoute: typeof ProtectedCompteRouteImport
    }
    '/_protected/_compte/compte/entreprises/': {
      id: '/_protected/_compte/compte/entreprises/'
      path: '/compte/entreprises'
      fullPath: '/compte/entreprises'
      preLoaderRoute: typeof ProtectedCompteCompteEntreprisesIndexImport
      parentRoute: typeof ProtectedCompteRouteImport
    }
    '/_protected/_compte/compte/entreprises/$slug/edit': {
      id: '/_protected/_compte/compte/entreprises/$slug/edit'
      path: '/compte/entreprises/$slug/edit'
      fullPath: '/compte/entreprises/$slug/edit'
      preLoaderRoute: typeof ProtectedCompteCompteEntreprisesSlugEditImport
      parentRoute: typeof ProtectedCompteRouteImport
    }
    '/_protected/_compte/compte/entreprises/$slug/preview': {
      id: '/_protected/_compte/compte/entreprises/$slug/preview'
      path: '/compte/entreprises/$slug/preview'
      fullPath: '/compte/entreprises/$slug/preview'
      preLoaderRoute: typeof ProtectedCompteCompteEntreprisesSlugPreviewImport
      parentRoute: typeof ProtectedCompteRouteImport
    }
    '/_protected/_compte/compte/entreprises/add/preview': {
      id: '/_protected/_compte/compte/entreprises/add/preview'
      path: '/compte/entreprises/add/preview'
      fullPath: '/compte/entreprises/add/preview'
      preLoaderRoute: typeof ProtectedCompteCompteEntreprisesAddPreviewImport
      parentRoute: typeof ProtectedCompteRouteImport
    }
    '/_protected/_compte/compte/entreprises/add/': {
      id: '/_protected/_compte/compte/entreprises/add/'
      path: '/compte/entreprises/add'
      fullPath: '/compte/entreprises/add'
      preLoaderRoute: typeof ProtectedCompteCompteEntreprisesAddIndexImport
      parentRoute: typeof ProtectedCompteRouteImport
    }
  }
}

// Create and export the route tree

interface AdminRouteRouteChildren {
  AdminAdminDashboardRoute: typeof AdminAdminDashboardRoute
}

const AdminRouteRouteChildren: AdminRouteRouteChildren = {
  AdminAdminDashboardRoute: AdminAdminDashboardRoute,
}

const AdminRouteRouteWithChildren = AdminRouteRoute._addFileChildren(
  AdminRouteRouteChildren,
)

interface ProtectedCompteRouteRouteChildren {
  ProtectedCompteComptePreferencesRoute: typeof ProtectedCompteComptePreferencesRoute
  ProtectedCompteCompteEntreprisesIndexRoute: typeof ProtectedCompteCompteEntreprisesIndexRoute
  ProtectedCompteCompteEntreprisesSlugEditRoute: typeof ProtectedCompteCompteEntreprisesSlugEditRoute
  ProtectedCompteCompteEntreprisesSlugPreviewRoute: typeof ProtectedCompteCompteEntreprisesSlugPreviewRoute
  ProtectedCompteCompteEntreprisesAddPreviewRoute: typeof ProtectedCompteCompteEntreprisesAddPreviewRoute
  ProtectedCompteCompteEntreprisesAddIndexRoute: typeof ProtectedCompteCompteEntreprisesAddIndexRoute
}

const ProtectedCompteRouteRouteChildren: ProtectedCompteRouteRouteChildren = {
  ProtectedCompteComptePreferencesRoute: ProtectedCompteComptePreferencesRoute,
  ProtectedCompteCompteEntreprisesIndexRoute:
    ProtectedCompteCompteEntreprisesIndexRoute,
  ProtectedCompteCompteEntreprisesSlugEditRoute:
    ProtectedCompteCompteEntreprisesSlugEditRoute,
  ProtectedCompteCompteEntreprisesSlugPreviewRoute:
    ProtectedCompteCompteEntreprisesSlugPreviewRoute,
  ProtectedCompteCompteEntreprisesAddPreviewRoute:
    ProtectedCompteCompteEntreprisesAddPreviewRoute,
  ProtectedCompteCompteEntreprisesAddIndexRoute:
    ProtectedCompteCompteEntreprisesAddIndexRoute,
}

const ProtectedCompteRouteRouteWithChildren =
  ProtectedCompteRouteRoute._addFileChildren(ProtectedCompteRouteRouteChildren)

interface ProtectedRouteRouteChildren {
  ProtectedCompteRouteRoute: typeof ProtectedCompteRouteRouteWithChildren
}

const ProtectedRouteRouteChildren: ProtectedRouteRouteChildren = {
  ProtectedCompteRouteRoute: ProtectedCompteRouteRouteWithChildren,
}

const ProtectedRouteRouteWithChildren = ProtectedRouteRoute._addFileChildren(
  ProtectedRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof ProtectedCompteRouteRouteWithChildren
  '/forgot-password': typeof authForgotPasswordRoute
  '/login': typeof authLoginRoute
  '/reset-password': typeof authResetPasswordRoute
  '/signup': typeof authSignupRoute
  '/about': typeof publicAboutRoute
  '/contact': typeof publicContactRoute
  '/faq': typeof publicFaqRoute
  '/partner': typeof publicPartnerRoute
  '/sources': typeof publicSourcesRoute
  '/categories/$slug': typeof publicCategoriesSlugRoute
  '/entreprises/$slug': typeof publicEntreprisesSlugRoute
  '/admin/dashboard': typeof AdminAdminDashboardRoute
  '/compte/preferences': typeof ProtectedCompteComptePreferencesRoute
  '/compte/entreprises': typeof ProtectedCompteCompteEntreprisesIndexRoute
  '/compte/entreprises/$slug/edit': typeof ProtectedCompteCompteEntreprisesSlugEditRoute
  '/compte/entreprises/$slug/preview': typeof ProtectedCompteCompteEntreprisesSlugPreviewRoute
  '/compte/entreprises/add/preview': typeof ProtectedCompteCompteEntreprisesAddPreviewRoute
  '/compte/entreprises/add': typeof ProtectedCompteCompteEntreprisesAddIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof ProtectedCompteRouteRouteWithChildren
  '/forgot-password': typeof authForgotPasswordRoute
  '/login': typeof authLoginRoute
  '/reset-password': typeof authResetPasswordRoute
  '/signup': typeof authSignupRoute
  '/about': typeof publicAboutRoute
  '/contact': typeof publicContactRoute
  '/faq': typeof publicFaqRoute
  '/partner': typeof publicPartnerRoute
  '/sources': typeof publicSourcesRoute
  '/categories/$slug': typeof publicCategoriesSlugRoute
  '/entreprises/$slug': typeof publicEntreprisesSlugRoute
  '/admin/dashboard': typeof AdminAdminDashboardRoute
  '/compte/preferences': typeof ProtectedCompteComptePreferencesRoute
  '/compte/entreprises': typeof ProtectedCompteCompteEntreprisesIndexRoute
  '/compte/entreprises/$slug/edit': typeof ProtectedCompteCompteEntreprisesSlugEditRoute
  '/compte/entreprises/$slug/preview': typeof ProtectedCompteCompteEntreprisesSlugPreviewRoute
  '/compte/entreprises/add/preview': typeof ProtectedCompteCompteEntreprisesAddPreviewRoute
  '/compte/entreprises/add': typeof ProtectedCompteCompteEntreprisesAddIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_admin': typeof AdminRouteRouteWithChildren
  '/_protected': typeof ProtectedRouteRouteWithChildren
  '/_protected/_compte': typeof ProtectedCompteRouteRouteWithChildren
  '/(auth)/forgot-password': typeof authForgotPasswordRoute
  '/(auth)/login': typeof authLoginRoute
  '/(auth)/reset-password': typeof authResetPasswordRoute
  '/(auth)/signup': typeof authSignupRoute
  '/(public)/about': typeof publicAboutRoute
  '/(public)/contact': typeof publicContactRoute
  '/(public)/faq': typeof publicFaqRoute
  '/(public)/partner': typeof publicPartnerRoute
  '/(public)/sources': typeof publicSourcesRoute
  '/(public)/categories/$slug': typeof publicCategoriesSlugRoute
  '/(public)/entreprises/$slug': typeof publicEntreprisesSlugRoute
  '/_admin/admin/dashboard': typeof AdminAdminDashboardRoute
  '/_protected/_compte/compte/preferences': typeof ProtectedCompteComptePreferencesRoute
  '/_protected/_compte/compte/entreprises/': typeof ProtectedCompteCompteEntreprisesIndexRoute
  '/_protected/_compte/compte/entreprises/$slug/edit': typeof ProtectedCompteCompteEntreprisesSlugEditRoute
  '/_protected/_compte/compte/entreprises/$slug/preview': typeof ProtectedCompteCompteEntreprisesSlugPreviewRoute
  '/_protected/_compte/compte/entreprises/add/preview': typeof ProtectedCompteCompteEntreprisesAddPreviewRoute
  '/_protected/_compte/compte/entreprises/add/': typeof ProtectedCompteCompteEntreprisesAddIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/forgot-password'
    | '/login'
    | '/reset-password'
    | '/signup'
    | '/about'
    | '/contact'
    | '/faq'
    | '/partner'
    | '/sources'
    | '/categories/$slug'
    | '/entreprises/$slug'
    | '/admin/dashboard'
    | '/compte/preferences'
    | '/compte/entreprises'
    | '/compte/entreprises/$slug/edit'
    | '/compte/entreprises/$slug/preview'
    | '/compte/entreprises/add/preview'
    | '/compte/entreprises/add'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/forgot-password'
    | '/login'
    | '/reset-password'
    | '/signup'
    | '/about'
    | '/contact'
    | '/faq'
    | '/partner'
    | '/sources'
    | '/categories/$slug'
    | '/entreprises/$slug'
    | '/admin/dashboard'
    | '/compte/preferences'
    | '/compte/entreprises'
    | '/compte/entreprises/$slug/edit'
    | '/compte/entreprises/$slug/preview'
    | '/compte/entreprises/add/preview'
    | '/compte/entreprises/add'
  id:
    | '__root__'
    | '/'
    | '/_admin'
    | '/_protected'
    | '/_protected/_compte'
    | '/(auth)/forgot-password'
    | '/(auth)/login'
    | '/(auth)/reset-password'
    | '/(auth)/signup'
    | '/(public)/about'
    | '/(public)/contact'
    | '/(public)/faq'
    | '/(public)/partner'
    | '/(public)/sources'
    | '/(public)/categories/$slug'
    | '/(public)/entreprises/$slug'
    | '/_admin/admin/dashboard'
    | '/_protected/_compte/compte/preferences'
    | '/_protected/_compte/compte/entreprises/'
    | '/_protected/_compte/compte/entreprises/$slug/edit'
    | '/_protected/_compte/compte/entreprises/$slug/preview'
    | '/_protected/_compte/compte/entreprises/add/preview'
    | '/_protected/_compte/compte/entreprises/add/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AdminRouteRoute: typeof AdminRouteRouteWithChildren
  ProtectedRouteRoute: typeof ProtectedRouteRouteWithChildren
  authForgotPasswordRoute: typeof authForgotPasswordRoute
  authLoginRoute: typeof authLoginRoute
  authResetPasswordRoute: typeof authResetPasswordRoute
  authSignupRoute: typeof authSignupRoute
  publicAboutRoute: typeof publicAboutRoute
  publicContactRoute: typeof publicContactRoute
  publicFaqRoute: typeof publicFaqRoute
  publicPartnerRoute: typeof publicPartnerRoute
  publicSourcesRoute: typeof publicSourcesRoute
  publicCategoriesSlugRoute: typeof publicCategoriesSlugRoute
  publicEntreprisesSlugRoute: typeof publicEntreprisesSlugRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AdminRouteRoute: AdminRouteRouteWithChildren,
  ProtectedRouteRoute: ProtectedRouteRouteWithChildren,
  authForgotPasswordRoute: authForgotPasswordRoute,
  authLoginRoute: authLoginRoute,
  authResetPasswordRoute: authResetPasswordRoute,
  authSignupRoute: authSignupRoute,
  publicAboutRoute: publicAboutRoute,
  publicContactRoute: publicContactRoute,
  publicFaqRoute: publicFaqRoute,
  publicPartnerRoute: publicPartnerRoute,
  publicSourcesRoute: publicSourcesRoute,
  publicCategoriesSlugRoute: publicCategoriesSlugRoute,
  publicEntreprisesSlugRoute: publicEntreprisesSlugRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_admin",
        "/_protected",
        "/(auth)/forgot-password",
        "/(auth)/login",
        "/(auth)/reset-password",
        "/(auth)/signup",
        "/(public)/about",
        "/(public)/contact",
        "/(public)/faq",
        "/(public)/partner",
        "/(public)/sources",
        "/(public)/categories/$slug",
        "/(public)/entreprises/$slug"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_admin": {
      "filePath": "_admin/route.tsx",
      "children": [
        "/_admin/admin/dashboard"
      ]
    },
    "/_protected": {
      "filePath": "_protected/route.tsx",
      "children": [
        "/_protected/_compte"
      ]
    },
    "/_protected/_compte": {
      "filePath": "_protected/_compte/route.tsx",
      "parent": "/_protected",
      "children": [
        "/_protected/_compte/compte/preferences",
        "/_protected/_compte/compte/entreprises/",
        "/_protected/_compte/compte/entreprises/$slug/edit",
        "/_protected/_compte/compte/entreprises/$slug/preview",
        "/_protected/_compte/compte/entreprises/add/preview",
        "/_protected/_compte/compte/entreprises/add/"
      ]
    },
    "/(auth)/forgot-password": {
      "filePath": "(auth)/forgot-password.tsx"
    },
    "/(auth)/login": {
      "filePath": "(auth)/login.tsx"
    },
    "/(auth)/reset-password": {
      "filePath": "(auth)/reset-password.tsx"
    },
    "/(auth)/signup": {
      "filePath": "(auth)/signup.tsx"
    },
    "/(public)/about": {
      "filePath": "(public)/about.tsx"
    },
    "/(public)/contact": {
      "filePath": "(public)/contact.tsx"
    },
    "/(public)/faq": {
      "filePath": "(public)/faq.tsx"
    },
    "/(public)/partner": {
      "filePath": "(public)/partner.tsx"
    },
    "/(public)/sources": {
      "filePath": "(public)/sources.tsx"
    },
    "/(public)/categories/$slug": {
      "filePath": "(public)/categories/$slug.tsx"
    },
    "/(public)/entreprises/$slug": {
      "filePath": "(public)/entreprises/$slug.tsx"
    },
    "/_admin/admin/dashboard": {
      "filePath": "_admin/admin/dashboard.tsx",
      "parent": "/_admin"
    },
    "/_protected/_compte/compte/preferences": {
      "filePath": "_protected/_compte/compte/preferences.tsx",
      "parent": "/_protected/_compte"
    },
    "/_protected/_compte/compte/entreprises/": {
      "filePath": "_protected/_compte/compte/entreprises/index.tsx",
      "parent": "/_protected/_compte"
    },
    "/_protected/_compte/compte/entreprises/$slug/edit": {
      "filePath": "_protected/_compte/compte/entreprises/$slug/edit.tsx",
      "parent": "/_protected/_compte"
    },
    "/_protected/_compte/compte/entreprises/$slug/preview": {
      "filePath": "_protected/_compte/compte/entreprises/$slug/preview.tsx",
      "parent": "/_protected/_compte"
    },
    "/_protected/_compte/compte/entreprises/add/preview": {
      "filePath": "_protected/_compte/compte/entreprises/add/preview.tsx",
      "parent": "/_protected/_compte"
    },
    "/_protected/_compte/compte/entreprises/add/": {
      "filePath": "_protected/_compte/compte/entreprises/add/index.tsx",
      "parent": "/_protected/_compte"
    }
  }
}
ROUTE_MANIFEST_END */
