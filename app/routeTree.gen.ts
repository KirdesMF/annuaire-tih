/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AdminRouteImport } from './routes/admin/route'
import { Route as ProtectedRouteImport } from './routes/_protected/route'
import { Route as IndexImport } from './routes/index'
import { Route as AdminIndexImport } from './routes/admin/index'
import { Route as AdminDashboardImport } from './routes/admin/dashboard'
import { Route as publicSourcesImport } from './routes/(public)/sources'
import { Route as publicPartnerImport } from './routes/(public)/partner'
import { Route as publicFaqImport } from './routes/(public)/faq'
import { Route as publicContactImport } from './routes/(public)/contact'
import { Route as publicAboutImport } from './routes/(public)/about'
import { Route as authSignupImport } from './routes/(auth)/signup'
import { Route as authResetPasswordImport } from './routes/(auth)/reset-password'
import { Route as authLoginImport } from './routes/(auth)/login'
import { Route as authForgotPasswordImport } from './routes/(auth)/forgot-password'
import { Route as ProtectedCompteRouteImport } from './routes/_protected/compte/route'
import { Route as ProtectedCompteIndexImport } from './routes/_protected/compte/index'
import { Route as ProtectedComptePreferencesImport } from './routes/_protected/compte/preferences'
import { Route as publicEntreprisesSlugImport } from './routes/(public)/entreprises/$slug'
import { Route as publicCategoriesSlugImport } from './routes/(public)/categories/$slug'
import { Route as ProtectedCompteEntreprisesIndexImport } from './routes/_protected/compte/entreprises/index'
import { Route as ProtectedCompteEntreprisesCreateIndexImport } from './routes/_protected/compte/entreprises/create/index'
import { Route as ProtectedCompteEntreprisesCreatePreviewImport } from './routes/_protected/compte/entreprises/create/preview'
import { Route as ProtectedCompteEntreprisesSlugEditRouteImport } from './routes/_protected/compte/entreprises/$slug/edit/route'
import { Route as ProtectedCompteEntreprisesSlugEditIndexImport } from './routes/_protected/compte/entreprises/$slug/edit/index'
import { Route as ProtectedCompteEntreprisesSlugEditPreviewImport } from './routes/_protected/compte/entreprises/$slug/edit/preview'
import { Route as ProtectedCompteEntreprisesSlugEditMediasImport } from './routes/_protected/compte/entreprises/$slug/edit/medias'
import { Route as ProtectedCompteEntreprisesSlugEditInfosImport } from './routes/_protected/compte/entreprises/$slug/edit/infos'

// Create/Update Routes

const AdminRouteRoute = AdminRouteImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => rootRoute,
} as any)

const ProtectedRouteRoute = ProtectedRouteImport.update({
  id: '/_protected',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AdminIndexRoute = AdminIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AdminRouteRoute,
} as any)

const AdminDashboardRoute = AdminDashboardImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => AdminRouteRoute,
} as any)

const publicSourcesRoute = publicSourcesImport.update({
  id: '/(public)/sources',
  path: '/sources',
  getParentRoute: () => rootRoute,
} as any)

const publicPartnerRoute = publicPartnerImport.update({
  id: '/(public)/partner',
  path: '/partner',
  getParentRoute: () => rootRoute,
} as any)

const publicFaqRoute = publicFaqImport.update({
  id: '/(public)/faq',
  path: '/faq',
  getParentRoute: () => rootRoute,
} as any)

const publicContactRoute = publicContactImport.update({
  id: '/(public)/contact',
  path: '/contact',
  getParentRoute: () => rootRoute,
} as any)

const publicAboutRoute = publicAboutImport.update({
  id: '/(public)/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const authSignupRoute = authSignupImport.update({
  id: '/(auth)/signup',
  path: '/signup',
  getParentRoute: () => rootRoute,
} as any)

const authResetPasswordRoute = authResetPasswordImport.update({
  id: '/(auth)/reset-password',
  path: '/reset-password',
  getParentRoute: () => rootRoute,
} as any)

const authLoginRoute = authLoginImport.update({
  id: '/(auth)/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const authForgotPasswordRoute = authForgotPasswordImport.update({
  id: '/(auth)/forgot-password',
  path: '/forgot-password',
  getParentRoute: () => rootRoute,
} as any)

const ProtectedCompteRouteRoute = ProtectedCompteRouteImport.update({
  id: '/compte',
  path: '/compte',
  getParentRoute: () => ProtectedRouteRoute,
} as any)

const ProtectedCompteIndexRoute = ProtectedCompteIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ProtectedCompteRouteRoute,
} as any)

const ProtectedComptePreferencesRoute = ProtectedComptePreferencesImport.update(
  {
    id: '/preferences',
    path: '/preferences',
    getParentRoute: () => ProtectedCompteRouteRoute,
  } as any,
)

const publicEntreprisesSlugRoute = publicEntreprisesSlugImport.update({
  id: '/(public)/entreprises/$slug',
  path: '/entreprises/$slug',
  getParentRoute: () => rootRoute,
} as any)

const publicCategoriesSlugRoute = publicCategoriesSlugImport.update({
  id: '/(public)/categories/$slug',
  path: '/categories/$slug',
  getParentRoute: () => rootRoute,
} as any)

const ProtectedCompteEntreprisesIndexRoute =
  ProtectedCompteEntreprisesIndexImport.update({
    id: '/entreprises/',
    path: '/entreprises/',
    getParentRoute: () => ProtectedCompteRouteRoute,
  } as any)

const ProtectedCompteEntreprisesCreateIndexRoute =
  ProtectedCompteEntreprisesCreateIndexImport.update({
    id: '/entreprises/create/',
    path: '/entreprises/create/',
    getParentRoute: () => ProtectedCompteRouteRoute,
  } as any)

const ProtectedCompteEntreprisesCreatePreviewRoute =
  ProtectedCompteEntreprisesCreatePreviewImport.update({
    id: '/entreprises/create/preview',
    path: '/entreprises/create/preview',
    getParentRoute: () => ProtectedCompteRouteRoute,
  } as any)

const ProtectedCompteEntreprisesSlugEditRouteRoute =
  ProtectedCompteEntreprisesSlugEditRouteImport.update({
    id: '/entreprises/$slug/edit',
    path: '/entreprises/$slug/edit',
    getParentRoute: () => ProtectedCompteRouteRoute,
  } as any)

const ProtectedCompteEntreprisesSlugEditIndexRoute =
  ProtectedCompteEntreprisesSlugEditIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => ProtectedCompteEntreprisesSlugEditRouteRoute,
  } as any)

const ProtectedCompteEntreprisesSlugEditPreviewRoute =
  ProtectedCompteEntreprisesSlugEditPreviewImport.update({
    id: '/preview',
    path: '/preview',
    getParentRoute: () => ProtectedCompteEntreprisesSlugEditRouteRoute,
  } as any)

const ProtectedCompteEntreprisesSlugEditMediasRoute =
  ProtectedCompteEntreprisesSlugEditMediasImport.update({
    id: '/medias',
    path: '/medias',
    getParentRoute: () => ProtectedCompteEntreprisesSlugEditRouteRoute,
  } as any)

const ProtectedCompteEntreprisesSlugEditInfosRoute =
  ProtectedCompteEntreprisesSlugEditInfosImport.update({
    id: '/infos',
    path: '/infos',
    getParentRoute: () => ProtectedCompteEntreprisesSlugEditRouteRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_protected': {
      id: '/_protected'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof ProtectedRouteImport
      parentRoute: typeof rootRoute
    }
    '/admin': {
      id: '/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminRouteImport
      parentRoute: typeof rootRoute
    }
    '/_protected/compte': {
      id: '/_protected/compte'
      path: '/compte'
      fullPath: '/compte'
      preLoaderRoute: typeof ProtectedCompteRouteImport
      parentRoute: typeof ProtectedRouteImport
    }
    '/(auth)/forgot-password': {
      id: '/(auth)/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof authForgotPasswordImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/login': {
      id: '/(auth)/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof authLoginImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/reset-password': {
      id: '/(auth)/reset-password'
      path: '/reset-password'
      fullPath: '/reset-password'
      preLoaderRoute: typeof authResetPasswordImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/signup': {
      id: '/(auth)/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof authSignupImport
      parentRoute: typeof rootRoute
    }
    '/(public)/about': {
      id: '/(public)/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof publicAboutImport
      parentRoute: typeof rootRoute
    }
    '/(public)/contact': {
      id: '/(public)/contact'
      path: '/contact'
      fullPath: '/contact'
      preLoaderRoute: typeof publicContactImport
      parentRoute: typeof rootRoute
    }
    '/(public)/faq': {
      id: '/(public)/faq'
      path: '/faq'
      fullPath: '/faq'
      preLoaderRoute: typeof publicFaqImport
      parentRoute: typeof rootRoute
    }
    '/(public)/partner': {
      id: '/(public)/partner'
      path: '/partner'
      fullPath: '/partner'
      preLoaderRoute: typeof publicPartnerImport
      parentRoute: typeof rootRoute
    }
    '/(public)/sources': {
      id: '/(public)/sources'
      path: '/sources'
      fullPath: '/sources'
      preLoaderRoute: typeof publicSourcesImport
      parentRoute: typeof rootRoute
    }
    '/admin/dashboard': {
      id: '/admin/dashboard'
      path: '/dashboard'
      fullPath: '/admin/dashboard'
      preLoaderRoute: typeof AdminDashboardImport
      parentRoute: typeof AdminRouteImport
    }
    '/admin/': {
      id: '/admin/'
      path: '/'
      fullPath: '/admin/'
      preLoaderRoute: typeof AdminIndexImport
      parentRoute: typeof AdminRouteImport
    }
    '/(public)/categories/$slug': {
      id: '/(public)/categories/$slug'
      path: '/categories/$slug'
      fullPath: '/categories/$slug'
      preLoaderRoute: typeof publicCategoriesSlugImport
      parentRoute: typeof rootRoute
    }
    '/(public)/entreprises/$slug': {
      id: '/(public)/entreprises/$slug'
      path: '/entreprises/$slug'
      fullPath: '/entreprises/$slug'
      preLoaderRoute: typeof publicEntreprisesSlugImport
      parentRoute: typeof rootRoute
    }
    '/_protected/compte/preferences': {
      id: '/_protected/compte/preferences'
      path: '/preferences'
      fullPath: '/compte/preferences'
      preLoaderRoute: typeof ProtectedComptePreferencesImport
      parentRoute: typeof ProtectedCompteRouteImport
    }
    '/_protected/compte/': {
      id: '/_protected/compte/'
      path: '/'
      fullPath: '/compte/'
      preLoaderRoute: typeof ProtectedCompteIndexImport
      parentRoute: typeof ProtectedCompteRouteImport
    }
    '/_protected/compte/entreprises/': {
      id: '/_protected/compte/entreprises/'
      path: '/entreprises'
      fullPath: '/compte/entreprises'
      preLoaderRoute: typeof ProtectedCompteEntreprisesIndexImport
      parentRoute: typeof ProtectedCompteRouteImport
    }
    '/_protected/compte/entreprises/$slug/edit': {
      id: '/_protected/compte/entreprises/$slug/edit'
      path: '/entreprises/$slug/edit'
      fullPath: '/compte/entreprises/$slug/edit'
      preLoaderRoute: typeof ProtectedCompteEntreprisesSlugEditRouteImport
      parentRoute: typeof ProtectedCompteRouteImport
    }
    '/_protected/compte/entreprises/create/preview': {
      id: '/_protected/compte/entreprises/create/preview'
      path: '/entreprises/create/preview'
      fullPath: '/compte/entreprises/create/preview'
      preLoaderRoute: typeof ProtectedCompteEntreprisesCreatePreviewImport
      parentRoute: typeof ProtectedCompteRouteImport
    }
    '/_protected/compte/entreprises/create/': {
      id: '/_protected/compte/entreprises/create/'
      path: '/entreprises/create'
      fullPath: '/compte/entreprises/create'
      preLoaderRoute: typeof ProtectedCompteEntreprisesCreateIndexImport
      parentRoute: typeof ProtectedCompteRouteImport
    }
    '/_protected/compte/entreprises/$slug/edit/infos': {
      id: '/_protected/compte/entreprises/$slug/edit/infos'
      path: '/infos'
      fullPath: '/compte/entreprises/$slug/edit/infos'
      preLoaderRoute: typeof ProtectedCompteEntreprisesSlugEditInfosImport
      parentRoute: typeof ProtectedCompteEntreprisesSlugEditRouteImport
    }
    '/_protected/compte/entreprises/$slug/edit/medias': {
      id: '/_protected/compte/entreprises/$slug/edit/medias'
      path: '/medias'
      fullPath: '/compte/entreprises/$slug/edit/medias'
      preLoaderRoute: typeof ProtectedCompteEntreprisesSlugEditMediasImport
      parentRoute: typeof ProtectedCompteEntreprisesSlugEditRouteImport
    }
    '/_protected/compte/entreprises/$slug/edit/preview': {
      id: '/_protected/compte/entreprises/$slug/edit/preview'
      path: '/preview'
      fullPath: '/compte/entreprises/$slug/edit/preview'
      preLoaderRoute: typeof ProtectedCompteEntreprisesSlugEditPreviewImport
      parentRoute: typeof ProtectedCompteEntreprisesSlugEditRouteImport
    }
    '/_protected/compte/entreprises/$slug/edit/': {
      id: '/_protected/compte/entreprises/$slug/edit/'
      path: '/'
      fullPath: '/compte/entreprises/$slug/edit/'
      preLoaderRoute: typeof ProtectedCompteEntreprisesSlugEditIndexImport
      parentRoute: typeof ProtectedCompteEntreprisesSlugEditRouteImport
    }
  }
}

// Create and export the route tree

interface ProtectedCompteEntreprisesSlugEditRouteRouteChildren {
  ProtectedCompteEntreprisesSlugEditInfosRoute: typeof ProtectedCompteEntreprisesSlugEditInfosRoute
  ProtectedCompteEntreprisesSlugEditMediasRoute: typeof ProtectedCompteEntreprisesSlugEditMediasRoute
  ProtectedCompteEntreprisesSlugEditPreviewRoute: typeof ProtectedCompteEntreprisesSlugEditPreviewRoute
  ProtectedCompteEntreprisesSlugEditIndexRoute: typeof ProtectedCompteEntreprisesSlugEditIndexRoute
}

const ProtectedCompteEntreprisesSlugEditRouteRouteChildren: ProtectedCompteEntreprisesSlugEditRouteRouteChildren =
  {
    ProtectedCompteEntreprisesSlugEditInfosRoute:
      ProtectedCompteEntreprisesSlugEditInfosRoute,
    ProtectedCompteEntreprisesSlugEditMediasRoute:
      ProtectedCompteEntreprisesSlugEditMediasRoute,
    ProtectedCompteEntreprisesSlugEditPreviewRoute:
      ProtectedCompteEntreprisesSlugEditPreviewRoute,
    ProtectedCompteEntreprisesSlugEditIndexRoute:
      ProtectedCompteEntreprisesSlugEditIndexRoute,
  }

const ProtectedCompteEntreprisesSlugEditRouteRouteWithChildren =
  ProtectedCompteEntreprisesSlugEditRouteRoute._addFileChildren(
    ProtectedCompteEntreprisesSlugEditRouteRouteChildren,
  )

interface ProtectedCompteRouteRouteChildren {
  ProtectedComptePreferencesRoute: typeof ProtectedComptePreferencesRoute
  ProtectedCompteIndexRoute: typeof ProtectedCompteIndexRoute
  ProtectedCompteEntreprisesIndexRoute: typeof ProtectedCompteEntreprisesIndexRoute
  ProtectedCompteEntreprisesSlugEditRouteRoute: typeof ProtectedCompteEntreprisesSlugEditRouteRouteWithChildren
  ProtectedCompteEntreprisesCreatePreviewRoute: typeof ProtectedCompteEntreprisesCreatePreviewRoute
  ProtectedCompteEntreprisesCreateIndexRoute: typeof ProtectedCompteEntreprisesCreateIndexRoute
}

const ProtectedCompteRouteRouteChildren: ProtectedCompteRouteRouteChildren = {
  ProtectedComptePreferencesRoute: ProtectedComptePreferencesRoute,
  ProtectedCompteIndexRoute: ProtectedCompteIndexRoute,
  ProtectedCompteEntreprisesIndexRoute: ProtectedCompteEntreprisesIndexRoute,
  ProtectedCompteEntreprisesSlugEditRouteRoute:
    ProtectedCompteEntreprisesSlugEditRouteRouteWithChildren,
  ProtectedCompteEntreprisesCreatePreviewRoute:
    ProtectedCompteEntreprisesCreatePreviewRoute,
  ProtectedCompteEntreprisesCreateIndexRoute:
    ProtectedCompteEntreprisesCreateIndexRoute,
}

const ProtectedCompteRouteRouteWithChildren =
  ProtectedCompteRouteRoute._addFileChildren(ProtectedCompteRouteRouteChildren)

interface ProtectedRouteRouteChildren {
  ProtectedCompteRouteRoute: typeof ProtectedCompteRouteRouteWithChildren
}

const ProtectedRouteRouteChildren: ProtectedRouteRouteChildren = {
  ProtectedCompteRouteRoute: ProtectedCompteRouteRouteWithChildren,
}

const ProtectedRouteRouteWithChildren = ProtectedRouteRoute._addFileChildren(
  ProtectedRouteRouteChildren,
)

interface AdminRouteRouteChildren {
  AdminDashboardRoute: typeof AdminDashboardRoute
  AdminIndexRoute: typeof AdminIndexRoute
}

const AdminRouteRouteChildren: AdminRouteRouteChildren = {
  AdminDashboardRoute: AdminDashboardRoute,
  AdminIndexRoute: AdminIndexRoute,
}

const AdminRouteRouteWithChildren = AdminRouteRoute._addFileChildren(
  AdminRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof ProtectedRouteRouteWithChildren
  '/admin': typeof AdminRouteRouteWithChildren
  '/compte': typeof ProtectedCompteRouteRouteWithChildren
  '/forgot-password': typeof authForgotPasswordRoute
  '/login': typeof authLoginRoute
  '/reset-password': typeof authResetPasswordRoute
  '/signup': typeof authSignupRoute
  '/about': typeof publicAboutRoute
  '/contact': typeof publicContactRoute
  '/faq': typeof publicFaqRoute
  '/partner': typeof publicPartnerRoute
  '/sources': typeof publicSourcesRoute
  '/admin/dashboard': typeof AdminDashboardRoute
  '/admin/': typeof AdminIndexRoute
  '/categories/$slug': typeof publicCategoriesSlugRoute
  '/entreprises/$slug': typeof publicEntreprisesSlugRoute
  '/compte/preferences': typeof ProtectedComptePreferencesRoute
  '/compte/': typeof ProtectedCompteIndexRoute
  '/compte/entreprises': typeof ProtectedCompteEntreprisesIndexRoute
  '/compte/entreprises/$slug/edit': typeof ProtectedCompteEntreprisesSlugEditRouteRouteWithChildren
  '/compte/entreprises/create/preview': typeof ProtectedCompteEntreprisesCreatePreviewRoute
  '/compte/entreprises/create': typeof ProtectedCompteEntreprisesCreateIndexRoute
  '/compte/entreprises/$slug/edit/infos': typeof ProtectedCompteEntreprisesSlugEditInfosRoute
  '/compte/entreprises/$slug/edit/medias': typeof ProtectedCompteEntreprisesSlugEditMediasRoute
  '/compte/entreprises/$slug/edit/preview': typeof ProtectedCompteEntreprisesSlugEditPreviewRoute
  '/compte/entreprises/$slug/edit/': typeof ProtectedCompteEntreprisesSlugEditIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof ProtectedRouteRouteWithChildren
  '/forgot-password': typeof authForgotPasswordRoute
  '/login': typeof authLoginRoute
  '/reset-password': typeof authResetPasswordRoute
  '/signup': typeof authSignupRoute
  '/about': typeof publicAboutRoute
  '/contact': typeof publicContactRoute
  '/faq': typeof publicFaqRoute
  '/partner': typeof publicPartnerRoute
  '/sources': typeof publicSourcesRoute
  '/admin/dashboard': typeof AdminDashboardRoute
  '/admin': typeof AdminIndexRoute
  '/categories/$slug': typeof publicCategoriesSlugRoute
  '/entreprises/$slug': typeof publicEntreprisesSlugRoute
  '/compte/preferences': typeof ProtectedComptePreferencesRoute
  '/compte': typeof ProtectedCompteIndexRoute
  '/compte/entreprises': typeof ProtectedCompteEntreprisesIndexRoute
  '/compte/entreprises/create/preview': typeof ProtectedCompteEntreprisesCreatePreviewRoute
  '/compte/entreprises/create': typeof ProtectedCompteEntreprisesCreateIndexRoute
  '/compte/entreprises/$slug/edit/infos': typeof ProtectedCompteEntreprisesSlugEditInfosRoute
  '/compte/entreprises/$slug/edit/medias': typeof ProtectedCompteEntreprisesSlugEditMediasRoute
  '/compte/entreprises/$slug/edit/preview': typeof ProtectedCompteEntreprisesSlugEditPreviewRoute
  '/compte/entreprises/$slug/edit': typeof ProtectedCompteEntreprisesSlugEditIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_protected': typeof ProtectedRouteRouteWithChildren
  '/admin': typeof AdminRouteRouteWithChildren
  '/_protected/compte': typeof ProtectedCompteRouteRouteWithChildren
  '/(auth)/forgot-password': typeof authForgotPasswordRoute
  '/(auth)/login': typeof authLoginRoute
  '/(auth)/reset-password': typeof authResetPasswordRoute
  '/(auth)/signup': typeof authSignupRoute
  '/(public)/about': typeof publicAboutRoute
  '/(public)/contact': typeof publicContactRoute
  '/(public)/faq': typeof publicFaqRoute
  '/(public)/partner': typeof publicPartnerRoute
  '/(public)/sources': typeof publicSourcesRoute
  '/admin/dashboard': typeof AdminDashboardRoute
  '/admin/': typeof AdminIndexRoute
  '/(public)/categories/$slug': typeof publicCategoriesSlugRoute
  '/(public)/entreprises/$slug': typeof publicEntreprisesSlugRoute
  '/_protected/compte/preferences': typeof ProtectedComptePreferencesRoute
  '/_protected/compte/': typeof ProtectedCompteIndexRoute
  '/_protected/compte/entreprises/': typeof ProtectedCompteEntreprisesIndexRoute
  '/_protected/compte/entreprises/$slug/edit': typeof ProtectedCompteEntreprisesSlugEditRouteRouteWithChildren
  '/_protected/compte/entreprises/create/preview': typeof ProtectedCompteEntreprisesCreatePreviewRoute
  '/_protected/compte/entreprises/create/': typeof ProtectedCompteEntreprisesCreateIndexRoute
  '/_protected/compte/entreprises/$slug/edit/infos': typeof ProtectedCompteEntreprisesSlugEditInfosRoute
  '/_protected/compte/entreprises/$slug/edit/medias': typeof ProtectedCompteEntreprisesSlugEditMediasRoute
  '/_protected/compte/entreprises/$slug/edit/preview': typeof ProtectedCompteEntreprisesSlugEditPreviewRoute
  '/_protected/compte/entreprises/$slug/edit/': typeof ProtectedCompteEntreprisesSlugEditIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/admin'
    | '/compte'
    | '/forgot-password'
    | '/login'
    | '/reset-password'
    | '/signup'
    | '/about'
    | '/contact'
    | '/faq'
    | '/partner'
    | '/sources'
    | '/admin/dashboard'
    | '/admin/'
    | '/categories/$slug'
    | '/entreprises/$slug'
    | '/compte/preferences'
    | '/compte/'
    | '/compte/entreprises'
    | '/compte/entreprises/$slug/edit'
    | '/compte/entreprises/create/preview'
    | '/compte/entreprises/create'
    | '/compte/entreprises/$slug/edit/infos'
    | '/compte/entreprises/$slug/edit/medias'
    | '/compte/entreprises/$slug/edit/preview'
    | '/compte/entreprises/$slug/edit/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/forgot-password'
    | '/login'
    | '/reset-password'
    | '/signup'
    | '/about'
    | '/contact'
    | '/faq'
    | '/partner'
    | '/sources'
    | '/admin/dashboard'
    | '/admin'
    | '/categories/$slug'
    | '/entreprises/$slug'
    | '/compte/preferences'
    | '/compte'
    | '/compte/entreprises'
    | '/compte/entreprises/create/preview'
    | '/compte/entreprises/create'
    | '/compte/entreprises/$slug/edit/infos'
    | '/compte/entreprises/$slug/edit/medias'
    | '/compte/entreprises/$slug/edit/preview'
    | '/compte/entreprises/$slug/edit'
  id:
    | '__root__'
    | '/'
    | '/_protected'
    | '/admin'
    | '/_protected/compte'
    | '/(auth)/forgot-password'
    | '/(auth)/login'
    | '/(auth)/reset-password'
    | '/(auth)/signup'
    | '/(public)/about'
    | '/(public)/contact'
    | '/(public)/faq'
    | '/(public)/partner'
    | '/(public)/sources'
    | '/admin/dashboard'
    | '/admin/'
    | '/(public)/categories/$slug'
    | '/(public)/entreprises/$slug'
    | '/_protected/compte/preferences'
    | '/_protected/compte/'
    | '/_protected/compte/entreprises/'
    | '/_protected/compte/entreprises/$slug/edit'
    | '/_protected/compte/entreprises/create/preview'
    | '/_protected/compte/entreprises/create/'
    | '/_protected/compte/entreprises/$slug/edit/infos'
    | '/_protected/compte/entreprises/$slug/edit/medias'
    | '/_protected/compte/entreprises/$slug/edit/preview'
    | '/_protected/compte/entreprises/$slug/edit/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ProtectedRouteRoute: typeof ProtectedRouteRouteWithChildren
  AdminRouteRoute: typeof AdminRouteRouteWithChildren
  authForgotPasswordRoute: typeof authForgotPasswordRoute
  authLoginRoute: typeof authLoginRoute
  authResetPasswordRoute: typeof authResetPasswordRoute
  authSignupRoute: typeof authSignupRoute
  publicAboutRoute: typeof publicAboutRoute
  publicContactRoute: typeof publicContactRoute
  publicFaqRoute: typeof publicFaqRoute
  publicPartnerRoute: typeof publicPartnerRoute
  publicSourcesRoute: typeof publicSourcesRoute
  publicCategoriesSlugRoute: typeof publicCategoriesSlugRoute
  publicEntreprisesSlugRoute: typeof publicEntreprisesSlugRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ProtectedRouteRoute: ProtectedRouteRouteWithChildren,
  AdminRouteRoute: AdminRouteRouteWithChildren,
  authForgotPasswordRoute: authForgotPasswordRoute,
  authLoginRoute: authLoginRoute,
  authResetPasswordRoute: authResetPasswordRoute,
  authSignupRoute: authSignupRoute,
  publicAboutRoute: publicAboutRoute,
  publicContactRoute: publicContactRoute,
  publicFaqRoute: publicFaqRoute,
  publicPartnerRoute: publicPartnerRoute,
  publicSourcesRoute: publicSourcesRoute,
  publicCategoriesSlugRoute: publicCategoriesSlugRoute,
  publicEntreprisesSlugRoute: publicEntreprisesSlugRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_protected",
        "/admin",
        "/(auth)/forgot-password",
        "/(auth)/login",
        "/(auth)/reset-password",
        "/(auth)/signup",
        "/(public)/about",
        "/(public)/contact",
        "/(public)/faq",
        "/(public)/partner",
        "/(public)/sources",
        "/(public)/categories/$slug",
        "/(public)/entreprises/$slug"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_protected": {
      "filePath": "_protected/route.tsx",
      "children": [
        "/_protected/compte"
      ]
    },
    "/admin": {
      "filePath": "admin/route.tsx",
      "children": [
        "/admin/dashboard",
        "/admin/"
      ]
    },
    "/_protected/compte": {
      "filePath": "_protected/compte/route.tsx",
      "parent": "/_protected",
      "children": [
        "/_protected/compte/preferences",
        "/_protected/compte/",
        "/_protected/compte/entreprises/",
        "/_protected/compte/entreprises/$slug/edit",
        "/_protected/compte/entreprises/create/preview",
        "/_protected/compte/entreprises/create/"
      ]
    },
    "/(auth)/forgot-password": {
      "filePath": "(auth)/forgot-password.tsx"
    },
    "/(auth)/login": {
      "filePath": "(auth)/login.tsx"
    },
    "/(auth)/reset-password": {
      "filePath": "(auth)/reset-password.tsx"
    },
    "/(auth)/signup": {
      "filePath": "(auth)/signup.tsx"
    },
    "/(public)/about": {
      "filePath": "(public)/about.tsx"
    },
    "/(public)/contact": {
      "filePath": "(public)/contact.tsx"
    },
    "/(public)/faq": {
      "filePath": "(public)/faq.tsx"
    },
    "/(public)/partner": {
      "filePath": "(public)/partner.tsx"
    },
    "/(public)/sources": {
      "filePath": "(public)/sources.tsx"
    },
    "/admin/dashboard": {
      "filePath": "admin/dashboard.tsx",
      "parent": "/admin"
    },
    "/admin/": {
      "filePath": "admin/index.tsx",
      "parent": "/admin"
    },
    "/(public)/categories/$slug": {
      "filePath": "(public)/categories/$slug.tsx"
    },
    "/(public)/entreprises/$slug": {
      "filePath": "(public)/entreprises/$slug.tsx"
    },
    "/_protected/compte/preferences": {
      "filePath": "_protected/compte/preferences.tsx",
      "parent": "/_protected/compte"
    },
    "/_protected/compte/": {
      "filePath": "_protected/compte/index.tsx",
      "parent": "/_protected/compte"
    },
    "/_protected/compte/entreprises/": {
      "filePath": "_protected/compte/entreprises/index.tsx",
      "parent": "/_protected/compte"
    },
    "/_protected/compte/entreprises/$slug/edit": {
      "filePath": "_protected/compte/entreprises/$slug/edit/route.tsx",
      "parent": "/_protected/compte",
      "children": [
        "/_protected/compte/entreprises/$slug/edit/infos",
        "/_protected/compte/entreprises/$slug/edit/medias",
        "/_protected/compte/entreprises/$slug/edit/preview",
        "/_protected/compte/entreprises/$slug/edit/"
      ]
    },
    "/_protected/compte/entreprises/create/preview": {
      "filePath": "_protected/compte/entreprises/create/preview.tsx",
      "parent": "/_protected/compte"
    },
    "/_protected/compte/entreprises/create/": {
      "filePath": "_protected/compte/entreprises/create/index.tsx",
      "parent": "/_protected/compte"
    },
    "/_protected/compte/entreprises/$slug/edit/infos": {
      "filePath": "_protected/compte/entreprises/$slug/edit/infos.tsx",
      "parent": "/_protected/compte/entreprises/$slug/edit"
    },
    "/_protected/compte/entreprises/$slug/edit/medias": {
      "filePath": "_protected/compte/entreprises/$slug/edit/medias.tsx",
      "parent": "/_protected/compte/entreprises/$slug/edit"
    },
    "/_protected/compte/entreprises/$slug/edit/preview": {
      "filePath": "_protected/compte/entreprises/$slug/edit/preview.tsx",
      "parent": "/_protected/compte/entreprises/$slug/edit"
    },
    "/_protected/compte/entreprises/$slug/edit/": {
      "filePath": "_protected/compte/entreprises/$slug/edit/index.tsx",
      "parent": "/_protected/compte/entreprises/$slug/edit"
    }
  }
}
ROUTE_MANIFEST_END */
